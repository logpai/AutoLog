INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator$CheckpointCanceller: Checkpoint <*> of job <*> expired before completing.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.jobmaster.JobMaster: Close ResourceManager connection <*>: <*>
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: No open TaskExecutor connection <*>. Ignoring close TaskExecutor connection. Closing reason was: <*>
DEBUG org.apache.flink.runtime.scheduler.adaptive.State: Cannot run \'<*>\' because the actual state is <*> and not <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived JVM Overhead size (<*>) does not match the configured or default JVM Overhead fraction (<*>) from the configured Total Process Memory size (<*>). The derived JVM OVerhead size will be used.
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be positive while finding <*>. Will ignore that resource.
INFO org.apache.flink.runtime.util.bash.BashJavaUtils: Final TaskExecutor Memory configuration:
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:   Total Process Memory:          <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:     Total Flink Memory:          <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:       Total JVM Heap Memory:     <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:         Framework:               <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:         Task:                    <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:       Total Off-heap Memory:     <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:         Managed:                 <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:         Total JVM Direct Memory: <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:           Framework:             <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:           Task:                  <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:           Network:               <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:     JVM Metaspace:               <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:     JVM Overhead:                <*>
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorToResourceManagerConnection: Successful registration at resource manager <*> under registration id <*>.
ERROR org.apache.flink.runtime.source.coordinator.SourceCoordinatorProvider$CoordinatorExecutorThreadFactory: Thread \'<*>\' produced an uncaught exception. Failing the job.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.ChannelStatePersister: <*> <*>, lastSeenBarrier = <*> (<*>) @ <*>
LOGEVENT org.apache.flink.runtime.io.network.partition.consumer.ChannelStatePersister: startPersisting
DEBUG org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Ignore recovered job <*> because the job is currently being executed.
WARN org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: The setting for \'<*> : <*>\' is invalid. Using default value of <*>
INFO org.apache.flink.runtime.scheduler.DefaultScheduler: Using failover strategy <*> for <*> (<*>).
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be positive while finding <*>. Will ignore that resource.
DEBUG org.apache.flink.runtime.io.disk.FileChannelManagerImpl: FileChannelManager uses directory <*> for spill files.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Job <*> reached terminal state <*>.
DEBUG org.apache.flink.runtime.rest.handler.taskmanager.AbstractTaskManagerFileHandler: Load file from TaskManager <*>.
INFO org.apache.flink.runtime.resourcemanager.ResourceManager: Starting the resource manager.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Received file upload request for file <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: The file <*> is unavailable on the TaskExecutor <*>.
DEBUG org.apache.flink.runtime.dispatcher.Dispatcher: Cleanup for the job \'<*>\' has finished. Job has been marked as clean.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Release TaskExecutor <*> because it exceeded the idle timeout.
ERROR org.apache.flink.runtime.io.network.api.writer.RecordWriter: An exception happened while flushing the outputs
WARN org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration: Config key <*> is deprecated; use <*> instead.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Declare new resource requirements for job <*>.<*>\trequired resources: <*><*>\tacquired resources: <*>
DEBUG org.apache.flink.runtime.taskmanager.Task: Declining checkpoint request for non-running task <*> (<*>).
DEBUG org.apache.flink.runtime.jobmaster.JobMaster$1: Failing deployments <*> due to no longer being deployed.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Initializing job \'<*>\' (<*>).
WARN org.apache.flink.runtime.metrics.MetricRegistryImpl: Cannot register metric, because the MetricRegistry has already been shut down.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerTracker: Free allocated slot with allocationId <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge: Request new allocated slot with slot request id <*> and resource profile <*>
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
DEBUG org.apache.flink.runtime.io.network.partition.PipelinedResultPartition: <*>: Received consumed notification for subpartition <*>.
DEBUG org.apache.flink.runtime.rest.RestClient: Sending request of class <*> to <*>:<*><*>
TRACE org.apache.flink.runtime.rest.RestClient: Adding file <*> to request.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Cannot find task to fail for execution <*> with exception:
DEBUG org.apache.flink.runtime.memory.MemoryManager: Initialized MemoryManager with total memory size <*> and page size <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration: Config key <*> is deprecated; use <*> instead.
WARN org.apache.flink.runtime.io.disk.iomanager.IOManager: IOManager failed to delete temporary file <*>
DEBUG org.apache.flink.runtime.checkpoint.TaskStateAssignment: created <*> for task=<*> subtask=<*>
DEBUG org.apache.flink.runtime.leaderelection.DefaultMultipleComponentLeaderElectionService: Could not find leader election event handler for componentId <*>. Ignoring the unregister call.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Abort checkpoint <*>@<*> for <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Ignoring checkpoint <*> notification for non-running task <*>.
DEBUG org.apache.flink.runtime.executiongraph.DefaultExecutionGraph: Received accumulator result for unknown execution <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Ignoring the freeing of slot <*> because the TaskExecutor is shutting down.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Completed checkpoint <*> for job <*> (<*> bytes, checkpointDuration=<*> ms, finalizationTime=<*> ms).
INFO org.apache.flink.runtime.state.filesystem.FsCheckpointMetadataOutputStream: Cannot create recoverable writer due to <*>, will use the ordinary writer.
INFO org.apache.flink.runtime.jobmanager.ZooKeeperJobGraphStoreWatcher: Stopping ZooKeeperJobGraphStoreWatcher 
DEBUG org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Stop current JobMasterServiceProcess because the leadership has been revoked.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: Discarding the results produced by task execution <*>.
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Request a <*>
INFO org.apache.flink.runtime.taskexecutor.DefaultJobLeaderService$JobManagerLeaderListener$JobManagerRegisteredRpcConnection: Successful registration at job manager <*> for job <*>.
TRACE org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Ignore \'<*>\' because the leadership runner is no longer running.
DEBUG org.apache.flink.runtime.scheduler.ExecutionGraphHandler: Can not find Execution for attempt <*>.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Ignoring outdated TaskExecutorGateway connection for <*>.
DEBUG org.apache.flink.runtime.io.disk.FileChannelManagerImpl: FileChannelManager uses directory <*> for spill files.
INFO org.apache.flink.runtime.io.disk.iomanager.IOManager: Created a new <*> for spilling of task related data to disk (joins, sorting, ...). Used directories:\n\t<*>
INFO org.apache.flink.runtime.query.QueryableStateUtils: Could not load Queryable State Server. Probable reason: flink-queryable-state-runtime is not in the classpath. To enable Queryable State, please move the flink-queryable-state-runtime jar from the opt to the lib folder.
INFO org.apache.flink.runtime.taskexecutor.KvStateService: Starting the kvState service and its components.
DEBUG org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager: Start <*> with local state root directories <*>.
TRACE org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Ignore \'<*>\' because the leadership runner is no longer running.
ERROR org.apache.flink.runtime.rest.handler.AbstractHandler: Implementation error: Received a request that wasn\'t a FullHttpRequest.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Stopped dispatcher <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager: Releasing local state under allocation id <*>.
INFO org.apache.flink.runtime.scheduler.adaptivebatch.DefaultVertexParallelismDecider: The size of broadcast data <*> is larger than the expected maximum value <*> (\'<*>\' * <*>). Use <*> as the size of broadcast data to decide the parallelism.
DEBUG org.apache.flink.runtime.scheduler.adaptivebatch.DefaultVertexParallelismDecider: The size of broadcast data is <*>, the size of non-broadcast data is <*>, the initially decided parallelism is <*>, after normalize is <*>
INFO org.apache.flink.runtime.scheduler.adaptivebatch.DefaultVertexParallelismDecider: The initially normalized parallelism <*> is larger than the normalized maximum parallelism <*>. Use <*> as the finally decided parallelism.
WARN org.apache.flink.runtime.state.StateBackendLoader: <*> state backend has been deprecated. Please use \'hashmap\' state backend instead.
INFO org.apache.flink.runtime.state.StateBackendLoader: State backend is set to heap memory <*>
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Cancel <*> from <*>
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Requested thread dump from unregistered TaskExecutor <*>.
INFO org.apache.flink.runtime.blob.BlobServer: Created BLOB server storage directory <*>
WARN org.apache.flink.runtime.blob.BlobServer: Invalid value for BLOB connection backlog: <*>. Using default value of <*>
INFO org.apache.flink.runtime.blob.BlobUtils: Found corrupted blob <*> under <*>. Deleting this blob.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.metrics.ReporterSetup: Excluding reporter <*>, not configured in reporter list (<*>).
DEBUG org.apache.flink.runtime.metrics.ReporterSetup: Found reporter factory <*> at <*> 
WARN org.apache.flink.runtime.metrics.ReporterSetup: No reporter class nor factory set for reporter <*>. Metrics might not be exposed/reported.
INFO org.apache.flink.runtime.metrics.ReporterSetup: The reporter configuration of <*> is out-dated (but still supported). Please configure a factory class instead: \'<*><*>.<*>: <*>\' to ensure that the configuration continues to work with future versions.
WARN org.apache.flink.runtime.metrics.ReporterSetup: The reporter factory (<*>) could not be found for reporter <*>. Available factories: <*>.
INFO org.apache.flink.runtime.metrics.MetricRegistryImpl: Periodically reporting metrics in intervals of <*> for reporter <*> of type <*>.
WARN org.apache.flink.runtime.metrics.MetricRegistryImpl: Failed to parse delimiter \'<*>\' for reporter \'<*>\', using global delimiter \'<*>\'.
INFO org.apache.flink.runtime.taskexecutor.slot.TaskSlotTableImpl: Free slot <*>.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.ChannelStatePersister: <*> <*>, lastSeenBarrier = <*> (<*>) @ <*>
INFO org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Closing the slot manager.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Suspending the slot manager.
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Completed checkpoint <*> for job <*> (<*> bytes, checkpointDuration=<*> ms, finalizationTime=<*> ms).
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*> @ <*>
TRACERECOVER org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel: InputChannelRecoveredStateHandler#recover
DEBUG org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel: <*>/<*> finished recovering input.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Job manager <*>@<*> was already registered.
INFO org.apache.flink.runtime.resourcemanager.ResourceManager: Registered job manager <*>@<*> for job <*>.
INFO org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: Recovering checkpoints from <*>.
INFO org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: Found <*> checkpoints in <*>.
INFO org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: Trying to fetch <*> checkpoints from storage.
INFO org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: Trying to retrieve checkpoint <*>.
INFO org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: Trying to retrieve checkpoint <*>.
DEBUG org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Ignore recovered job <*> because the job is currently being executed.
INFO org.apache.flink.runtime.scheduler.adaptive.StateWithExecutionGraph: Savepoint stored in <*>. Now cancelling <*>.
WARN org.apache.flink.runtime.taskmanager.TaskManagerLocation: No hostname could be resolved for the IP address <*>, using IP address as host name. Local input split assignment (such as for HDFS files) may be impacted.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: The JobManager under <*> rejected the registration for job <*>: <*>. Releasing all job related resources.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
INFO org.apache.flink.runtime.dispatcher.runner.AbstractDispatcherLeaderProcess: Stopping <*>.
ERROR org.apache.flink.runtime.util.Hardware: Cannot determine size of physical memory for unknown operating system
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to fail task externally <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
WARN org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge: Could not acquire the minimum required resources, failing slot requests. Acquired: <*>. Current slot pool status: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager: Releasing local state under allocation id <*>.
INFO org.apache.flink.runtime.webmonitor.WebMonitorUtils$LogFileLocation: Determined location of main cluster component log file: <*>
INFO org.apache.flink.runtime.webmonitor.WebMonitorUtils$LogFileLocation: Determined location of main cluster component stdout file: <*>
INFO org.apache.flink.runtime.state.changelog.StateChangelogStorageLoader: StateChangelogStorageLoader initialized with shortcut names {<*>}.
DEBUG org.apache.flink.runtime.security.SecurityUtils: Unable to install security context factory <*>
ERROR org.apache.flink.runtime.security.SecurityUtils: Unable to install a valid security context factory!
INFO org.apache.flink.runtime.taskexecutor.TaskManagerRunner: Terminating TaskManagerRunner with exit code <*>.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager: Could not allocate <*>. Max total resource limitation <<*>, <*>> is reached.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Ignoring the freeing of slot <*> because the TaskExecutor is shutting down.
ERROR org.apache.flink.runtime.util.Hardware: Cannot determine the size of the physical memory for Windows host (using \'wmic memorychip\')
DEBUG org.apache.flink.runtime.blob.FileSystemBlobStore: Deleting <*>.
DEBUG org.apache.flink.runtime.blob.FileSystemBlobStore: The given path <*> is not present anymore. No deletion is required.
INFO org.apache.flink.runtime.scheduler.adaptive.FailureResultUtil: Restarting job.
WARN org.apache.flink.runtime.metrics.MetricRegistryImpl: Cannot unregister metric, because the MetricRegistry has already been shut down.
INFO org.apache.flink.runtime.leaderelection.DefaultLeaderElectionService: Starting DefaultLeaderElectionService with <*>.
DEBUG org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler: Ignoring scheduled action because expected state <*> is not the actual state <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is less than its min value <*>, min value will be used instead
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Invalid registration id for slot available message. This indicates an outdated request.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Unregistering task executor <*> from the slot manager.
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Completed checkpoint <*> for job <*> (<*> bytes, checkpointDuration=<*> ms, finalizationTime=<*> ms).
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Invalid value for <*>. System will attempt no retries on failed fetch operations of BLOBs.
INFO org.apache.flink.runtime.blob.BlobUtils: Found corrupted blob <*> under <*>. Deleting this blob.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Performing merge of <*> sorted streams.
WARN org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge: Could not acquire the minimum required resources, failing slot requests. Acquired: <*>. Current slot pool status: <*>
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate: Converting recovered input channels (<*> channels)
WARN org.apache.flink.runtime.blob.BlobWriter: Failed to offload value for job <*> to BLOB store.
INFO org.apache.flink.runtime.query.QueryableStateUtils: Could not load Queryable State Client Proxy. Probable reason: flink-queryable-state-runtime is not in the classpath. To enable Queryable State, please move the flink-queryable-state-runtime jar from the opt to the lib folder.
DEBUG org.apache.flink.runtime.taskmanager.Task: Declining checkpoint request for non-running task <*> (<*>).
DEBUG org.apache.flink.runtime.executiongraph.Execution: Ignoring transition of vertex <*> to <*> while being <*>.
WARN org.apache.flink.runtime.webmonitor.WebMonitorUtils$LogFileLocation: JobManager log files are unavailable in the web dashboard. Log file location not found in environment variable \'<*>\' or configuration key \'<*>\'.
TRACE org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Ignore leader action \'<*>\' because the leadership runner is no longer the valid leader for <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Register slots <*> from TaskManager <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Matched slot offer <*> to requirement <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Could not match offer <*> to any outstanding requirement.
INFO org.apache.flink.runtime.io.network.netty.NettyServer: Successful initialization (took <*> ms). Listening on SocketAddress <*>.
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be configured. Will ignore that resource.
INFO org.apache.flink.runtime.externalresource.ExternalResourceUtils: Enabled external resources: <*>
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: Could not find driver class name for <*>. Please make sure <*> is configured.
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: Could not found legal amount configuration for <*>.
DEBUG org.apache.flink.runtime.leaderelection.ZooKeeperLeaderElectionDriver: Successfully wrote leader information: <*>.
ERROR org.apache.flink.runtime.jobmaster.JobMaster: Fatal error occurred on JobManager.
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to fail task externally <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: Task <*> is already in state <*>
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceTracker: Stopping tracking of resources for job <*>.
DEBUG org.apache.flink.runtime.checkpoint.StateAssignmentOperation: Rescaling maximum parallelism for JobVertex <*> from <*> to <*>
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerTracker: Add pending task manager <*>.
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*>, seq <*>, <*> @ <*>
TRACEINPUT org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannel: RemoteInputChannel#getNextBuffer
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close ResourceManager connection <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Terminating registration attempts towards ResourceManager <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Connecting to ResourceManager <*>.
DEBUG org.apache.flink.runtime.leaderelection.DefaultLeaderElectionService: Ignoring the grant leadership notification since the <*> has already been closed.
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to fail task externally <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
WARN org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> with failure cause: <*>
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException.
DEBUG org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException: <*>
INFO org.apache.flink.runtime.taskmanager.Task: Task <*> is already in state <*>
DEBUG org.apache.flink.runtime.operators.sort.CombiningSpillingBehaviour: Combining buffer <*>.
DEBUG org.apache.flink.runtime.operators.sort.CombiningSpillingBehaviour: Combined and spilled buffer <*>.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Close ResourceManager connection <*>: <*>
INFO org.apache.flink.runtime.jobmaster.JobMaster: Connecting to ResourceManager <*>
DEBUG org.apache.flink.runtime.taskmanager.Task: Declining checkpoint request for non-running task <*> (<*>).
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.state.CheckpointStorageLoader: Checkpoint storage is set to \'<*>\'
INFO org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Received resource requirements from job <*>: <*>
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Could not allocate <*> more slots. The number of registered and pending slots is <*>, while the maximum is <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Could not fulfill resource requirements of job <*>. Free slots: <*>
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Could not allocate <*> more slots. The number of registered and pending slots is <*>, while the maximum is <*>.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartitionFactory: <*>: Initialized <*>
WARN org.apache.flink.runtime.checkpoint.CheckpointCoordinator: An error occurred while writing checkpoint <*> to the underlying metadata store. Flink was not able to determine whether the metadata was successfully persisted. The corresponding state located at \'<*>\' won\'t be discarded and needs to be cleaned up manually.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.dispatcher.Dispatcher: Dispatcher is unable to cancel job <*>: not found
INFO org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotStatusSyncer: Starting allocation of slot <*> from <*> for job <*> with resource profile <*>.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Initializing job \'<*>\' (<*>).
INFO org.apache.flink.runtime.taskexecutor.slot.TaskSlotTableImpl: Free slot <*>.
DEBUG org.apache.flink.runtime.leaderelection.DefaultLeaderElectionService: Confirm leader session ID <*> for leader <*>.
DEBUG org.apache.flink.runtime.leaderelection.DefaultLeaderElectionService: Ignoring the leader session Id <*> confirmation, since the LeaderElectionService has already been stopped.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is less than its min value <*>, min value will be used instead
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerTracker: Remove pending task manager <*>.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
WARN org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger or complete checkpoint <*> for job <*>. (<*> consecutive failed attempts so far)
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Stopping dispatcher <*>.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Stopping all currently running jobs of dispatcher <*>.
DEBUG org.apache.flink.runtime.dispatcher.Dispatcher: Cleanup for the job \'<*>\' has finished. Job has been marked as clean.
WARN org.apache.flink.runtime.accumulators.AccumulatorRegistry: Failed to serialize accumulators for task.
WARN org.apache.flink.runtime.accumulators.AccumulatorRegistry: Failed to serialize accumulators for task.
WARN org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: The setting for \'<*> : <*>\' is invalid. Using default value of <*>
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Connecting to ResourceManager <*>.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate: <*>: Updated unknown input channel to <*>.
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*> @ <*>
TRACERECOVER org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel: InputChannelRecoveredStateHandler#recover
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*> @ <*>
TRACERECOVER org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel: InputChannelRecoveredStateHandler#recover
DEBUG org.apache.flink.runtime.io.network.buffer.LocalBufferPool: Using a local buffer pool with <*>-<*> buffers
INFO org.apache.flink.runtime.jobmaster.JobMaster: Error while request key-value state location
INFO org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationManager: Trying to cancel job <*> with savepoint, but no savepoint directory configured.
INFO org.apache.flink.runtime.scheduler.adaptive.Executing: Triggering stop-with-savepoint for job <*>.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
WARN org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger or complete checkpoint <*> for job <*>. (<*> consecutive failed attempts so far)
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
DEBUG org.apache.flink.runtime.operators.AllGroupCombineDriver: AllGroupCombine starting.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Matched slot offer <*> to requirement <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Could not match offer <*> to any outstanding requirement.
DEBUG org.apache.flink.runtime.executiongraph.Execution: The execution has no slot assigned. This indicates that the execution is no longer running.
DEBUG org.apache.flink.runtime.executiongraph.Execution: The execution has no slot assigned. This indicates that the execution is no longer running.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Job manager <*>@<*> was already registered.
INFO org.apache.flink.runtime.resourcemanager.ResourceManager: Registered job manager <*>@<*> for job <*>.
INFO org.apache.flink.runtime.state.StateBackendLoader: Loading state backend via factory <*>
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge: Release slot with slot request id <*>
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge: Could not find slot which has fulfilled slot request <*>. Ignoring the release operation.
WARN org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: The setting for \'<*> : <*>\' is invalid. Using default value of <*>
INFO org.apache.flink.runtime.scheduler.DefaultScheduler: Using failover strategy <*> for <*> (<*>).
INFO org.apache.flink.runtime.resourcemanager.ResourceManager: Shut down cluster because application is in <*>, diagnostics <*>.
DEBUG org.apache.flink.runtime.executiongraph.Execution: The execution has no slot assigned. This indicates that the execution is no longer running.
ERROR org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Received wrong AcknowledgeCheckpoint message for job <*> from <*> : <*>
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close ResourceManager connection <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Terminating registration attempts towards ResourceManager <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Connecting to ResourceManager <*>.
ERROR org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService: Embedded leader election service encountered a fatal error. Shutting down service.
INFO org.apache.flink.runtime.highavailability.AbstractHaServices: Clean up the high availability data for job <*>.
INFO org.apache.flink.runtime.highavailability.AbstractHaServices: Finished cleaning up the high availability data for job <*>.
INFO org.apache.flink.runtime.security.contexts.HadoopSecurityContextFactory: Cannot install HadoopSecurityContext because Hadoop cannot be found in the Classpath.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
WARN org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger or complete checkpoint <*> for job <*>. (<*> consecutive failed attempts so far)
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.resourcemanager.ResourceManager: Disconnect job manager <*>@<*> for job <*> from the resource manager.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived JVM Overhead size (<*>) does not match the configured or default JVM Overhead fraction (<*>) from the configured Total Process Memory size (<*>). The derived JVM OVerhead size will be used.
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*> @ <*>
TRACERECOVER org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel: InputChannelRecoveredStateHandler#recover
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*> @ <*>
TRACERECOVER org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel: InputChannelRecoveredStateHandler#recover
DEBUG org.apache.flink.runtime.scheduler.adaptive.allocator.SharedSlot: Release shared slot externally (<*>)
INFO org.apache.flink.runtime.scheduler.DefaultSchedulerFactory: Using restart back off time strategy <*> for <*> (<*>).
WARN org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: The setting for \'<*> : <*>\' is invalid. Using default value of <*>
INFO org.apache.flink.runtime.zookeeper.FlinkZooKeeperQuorumPeer: Writing <*> to myid file in \'dataDir\'.
INFO org.apache.flink.runtime.state.filesystem.FsCheckpointMetadataOutputStream: Cannot create recoverable writer due to <*>, will use the ordinary writer.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Request upload of file <*> from TaskExecutor <*>.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Request upload of file <*> from unregistered TaskExecutor <*>.
DEBUG org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcherImpl: Retrieve metric query service gateway for <*>
DEBUG org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcherImpl: Retrieve metric query service gateway for <*>
DEBUG org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcherImpl: Retrieve metric query service gateway for <*>
DEBUG org.apache.flink.runtime.operators.sort.SortingThread: Sorting thread done.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be configured. Will ignore that resource.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager: Matching resource requirements against available resources.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager: Could not allocate <*>. Max total resource limitation <<*>, <*>> is reached.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager: Could not allocate <*>. Max total resource limitation <<*>, <*>> is reached.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager: Could not allocate <*>. Max total resource limitation <<*>, <*>> is reached.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager: Could not fulfill resource requirements of job <*>.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartition: <*>: Releasing <*>.
DEBUG org.apache.flink.runtime.rest.RestClient: Sending request of class <*> to <*>:<*><*>
TRACE org.apache.flink.runtime.rest.RestClient: Adding file <*> to request.
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Invalid value for <*>. System will attempt no retries on failed fetch operations of BLOBs.
INFO org.apache.flink.runtime.blob.BlobUtils: Found corrupted blob <*> under <*>. Deleting this blob.
DEBUG org.apache.flink.runtime.checkpoint.StateAssignmentOperation: Rescaling maximum parallelism for JobVertex <*> from <*> to <*>
DEBUG org.apache.flink.runtime.checkpoint.StateAssignmentOperation: Rescaling maximum parallelism for JobVertex <*> from <*> to <*>
DEBUG org.apache.flink.runtime.checkpoint.StateAssignmentOperation: Rescaling maximum parallelism for JobVertex <*> from <*> to <*>
INFO org.apache.flink.runtime.source.coordinator.SourceCoordinator: Closing SourceCoordinator for source <*>.
INFO org.apache.flink.runtime.source.coordinator.SourceCoordinator: Source coordinator for source <*> closed.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
DEBUG org.apache.flink.runtime.taskexecutor.slot.FileSlotAllocationSnapshotPersistenceService: No allocation files to load.
WARN org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationHandlerImpl: Inconsistent execution state after stopping with savepoint. At least one execution is still in one of the following states: <*>.
DEBUG org.apache.flink.runtime.blob.FileSystemBlobStore: Deleting <*>.
DEBUG org.apache.flink.runtime.blob.FileSystemBlobStore: The given path <*> is not present anymore. No deletion is required.
WARN org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Failed requesting worker with resource spec <*>, current pending count: <*>
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Will not retry creating worker in <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived JVM Overhead size (<*>) does not match the configured or default JVM Overhead fraction (<*>) from the configured Total Process Memory size (<*>). The derived JVM OVerhead size will be used.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Requesting new worker with resource spec <*>, current pending count: <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived JVM Overhead size (<*>) does not match the configured or default JVM Overhead fraction (<*>) from the configured Total Process Memory size (<*>). The derived JVM OVerhead size will be used.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Requesting new worker with resource spec <*>, current pending count: <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Requesting new worker with resource spec <*>, current pending count: <*>.
INFO org.apache.flink.runtime.taskexecutor.slot.TaskSlotTableImpl: Activate slot <*>.
DEBUG org.apache.flink.runtime.blob.BlobServer: Received PUT call for BLOB of job <*>.
INFO org.apache.flink.runtime.util.EnvironmentInformation:  Preconfiguration: 
INFO org.apache.flink.runtime.util.EnvironmentInformation:  JVM Options:
INFO org.apache.flink.runtime.util.EnvironmentInformation:  Program Arguments:
WARN org.apache.flink.runtime.util.EnvironmentInformation: Unexpected error when accessing file handle limit
INFO org.apache.flink.runtime.taskexecutor.TaskManagerRunner: Maximum number of open file descriptors is <*>.
INFO org.apache.flink.runtime.state.changelog.StateChangelogStorageLoader: StateChangelogStorageLoader initialized with shortcut names {<*>}.
DEBUG org.apache.flink.runtime.security.SecurityUtils: Unable to install security context factory <*>
ERROR org.apache.flink.runtime.security.SecurityUtils: Unable to install a valid security context factory!
INFO org.apache.flink.runtime.taskexecutor.TaskManagerRunner: Terminating TaskManagerRunner with exit code <*>.
DEBUG org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler: Stopping the checkpoint services with state <*>.
INFO org.apache.flink.runtime.taskmanager.MemoryLogger: Starting periodic memory usage logger
<INIT> org.apache.flink.runtime.taskmanager.MemoryLogger: Memory Logger
DEBUG org.apache.flink.runtime.rest.handler.taskmanager.AbstractTaskManagerFileHandler: Load file from TaskManager <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.blob.BlobClient: Using ssl connection to the blob server
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate: Fail to get size of queued buffers :
DEBUG org.apache.flink.runtime.throughput.BufferDebloater: Buffer debloater init settings: gateIndex=<*>, targetTotalBufferSize=<*>, maxBufferSize=<*>, minBufferSize=<*>, bufferDebloatThresholdPercentages=<*>, numberOfSamples=<*>
DEBUG org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Confirm leadership <*>.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartitionManager: Releasing <*> partitions because of shutdown.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartition: <*>: Releasing <*>.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartition: <*>: Releasing <*>.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartition: <*>: Releasing <*>.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartitionManager: Successful shutdown.
INFO org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Releasing slot [<*>].
DEBUG org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationHandlerImpl: Stop-with-savepoint transitioned from <*> to <*> on savepoint creation failure handling for job <*>.
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Allocated <*>
INFO org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService: Proposing leadership to contender <*>
<INIT> org.apache.flink.runtime.rest.handler.job.checkpoints.CheckpointingStatisticsHandler: Checkpointing has not been enabled.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
INFO org.apache.flink.runtime.highavailability.AbstractHaServices: Close and clean up all data for <*>.
INFO org.apache.flink.runtime.highavailability.AbstractHaServices: Finished cleaning up the high availability data.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
DEBUG org.apache.flink.runtime.executiongraph.Execution: Concurrent canceling/failing of <*> while deployment was in progress.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Matched slot offer <*> to requirement <*>.
WARN org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase: Unexpected null keyed state handle of materialized part when deserializing changelog state-backend handle
INFO org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Releasing slot [<*>].
DEBUG org.apache.flink.runtime.scheduler.KvStateHandler: Request of key-value state location for unknown job <*> received.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotStatusSyncer: Received slot report from instance <*>: <*>.
DEBUG org.apache.flink.runtime.blob.BlobServer: Received PUT call for BLOB of job <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.leaderelection.ZooKeeperLeaderElectionDriver: Connected to ZooKeeper quorum. Leader election can start.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Register slots <*> from TaskManager <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Matched slot offer <*> to requirement <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Matched slot offer <*> to requirement <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Matched slot offer <*> to requirement <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Could not match offer <*> to any outstanding requirement.
WARN org.apache.flink.runtime.io.network.partition.ResultPartitionFactory: Cannot determine memory architecture. Using pure file-based shuffle.
DEBUG org.apache.flink.runtime.rest.handler.taskmanager.AbstractTaskManagerFileHandler: Could not connect to ResourceManager right now.
TRACE org.apache.flink.runtime.state.TaskLocalStateStoreImpl: Discarding local task state snapshot of checkpoint <*> for subtask (<*> - <*> - <*>).
INFO org.apache.flink.runtime.executiongraph.Execution: Discarding the results produced by task execution <*>.
WARN org.apache.flink.runtime.state.heap.CopyOnWriteStateMap: Maximum capacity of ^ in StateMap reached. Cannot increase hash map size. This can lead to more collisions and lower performance. Please consider scaling-out your job or using a different keyed state backend implementation!
WARN org.apache.flink.runtime.metrics.MetricRegistryImpl: Cannot unregister metric, because the MetricRegistry has already been shut down.
DEBUG org.apache.flink.runtime.jobmanager.ZooKeeperJobGraphStoreWatcher$JobGraphsPathCacheListener: Received <*> event (path: <*>)
WARN org.apache.flink.runtime.jobmanager.ZooKeeperJobGraphStoreWatcher$JobGraphsPathCacheListener: ZooKeeper connection LOST. Changes to the submitted job graphs are not monitored (permanently).
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: Discarding the results produced by task execution <*>.
DEBUG org.apache.flink.runtime.leaderelection.ZooKeeperMultipleComponentLeaderElectionDriver: <*> lost the leadership.
ERROR org.apache.flink.runtime.util.Hardware: Cannot determine the size of the physical memory for Linux host (using \'/proc/meminfo\'). Unexpected format.
INFO org.apache.flink.runtime.io.network.buffer.NetworkBufferPool: Allocated <*> MB for network buffer pool (number of memory segments: <*>, bytes per segment: <*>).
INFO org.apache.flink.runtime.util.SignalHandler$Handler: RECEIVED SIGNAL <*>: SIG<*>. Shutting down as requested.
ERROR org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext: Uncaught Exception in Source Coordinator Executor
INFO org.apache.flink.runtime.state.CheckpointStorageLoader: Checkpoint storage is set to \'<*>\'
INFO org.apache.flink.runtime.scheduler.adapter.DefaultExecutionTopology: Built <*> new pipelined regions in <*> ms, total <*> pipelined regions currently.
INFO org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration: Ignoring old (but still present) network buffer configuration via <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Release TaskExecutor <*> because it exceeded the idle timeout.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartition: <*>: Releasing <*>.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartitionManager: Released partition <*> produced by <*>.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartition: <*>: Releasing <*>.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartitionManager: Released partition <*> produced by <*>.
ERROR org.apache.flink.runtime.rest.handler.AbstractHandler: Implementation error: Received a request that wasn\'t a FullHttpRequest.
INFO org.apache.flink.runtime.source.coordinator.SourceCoordinator: Marking checkpoint <*> as completed for source <*>.
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be positive while finding <*>. Will ignore that resource.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Ignoring the freeing of slot <*> because the TaskExecutor is shutting down.
INFO org.apache.flink.runtime.source.coordinator.SourceCoordinator: Recovering subtask <*> to checkpoint <*> for source <*> to checkpoint.
DEBUG org.apache.flink.runtime.source.coordinator.SourceCoordinator: Adding splits back to the split enumerator of source <*>: <*>
DEBUG org.apache.flink.runtime.operators.hash.CompactingHashTable: Closing hash table and releasing resources.
DEBUG org.apache.flink.runtime.io.disk.FileChannelManagerImpl: FileChannelManager uses directory <*> for spill files.
INFO org.apache.flink.runtime.io.disk.iomanager.IOManager: Created a new <*> for spilling of task related data to disk (joins, sorting, ...). Used directories:\n\t<*>
INFO org.apache.flink.runtime.state.heap.HeapRestoreOperation: Starting to restore from state handle: <*>.
INFO org.apache.flink.runtime.resourcemanager.ResourceManager: Disconnect job manager <*>@<*> for job <*> from the resource manager.
INFO org.apache.flink.runtime.leaderretrieval.DefaultLeaderRetrievalService: Stopping DefaultLeaderRetrievalService.
WARN org.apache.flink.runtime.state.heap.CopyOnWriteStateMap: Maximum capacity of ^ in StateMap reached. Cannot increase hash map size. This can lead to more collisions and lower performance. Please consider scaling-out your job or using a different keyed state backend implementation!
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Could not delete the staging file <*> for blob key <*> and job <*>.
WARN org.apache.flink.runtime.state.filesystem.FsStateBackend: Ignoring invalid file size threshold value (<*>): <*> - using default value <*> instead.
WARN org.apache.flink.runtime.metrics.ReporterSetup: The reporter factory (<*>) could not be found for reporter <*>. Available factories: <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived JVM Overhead size (<*>) does not match the configured or default JVM Overhead fraction (<*>) from the configured Total Process Memory size (<*>). The derived JVM OVerhead size will be used.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Requesting new worker with resource spec <*>, current pending count: <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is less than its min value <*>, min value will be used instead
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Requesting new worker with resource spec <*>, current pending count: <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Requesting new worker with resource spec <*>, current pending count: <*>.
WARN org.apache.flink.runtime.resourcemanager.ResourceManagerServiceImpl: Cannot deregister application. Resource manager service is not available.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
INFO org.apache.flink.runtime.util.bash.BashJavaUtils: Final Master Memory configuration:
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:   Total Process Memory: <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:     Total Flink Memory: <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:       JVM Heap:         <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:       Off-heap:         <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:     JVM Metaspace:      <*>
INFO org.apache.flink.runtime.util.bash.BashJavaUtils:     JVM Overhead:       <*>
ERROR org.apache.flink.runtime.util.Hardware: Cannot determine physical memory of machine for MacOS host
INFO org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationManager: Trying to cancel job <*> with savepoint, but no savepoint directory configured.
INFO org.apache.flink.runtime.io.network.netty.NettyClient: Successful shutdown (took <*> ms).
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateWriterImpl: <*> finishing input data, checkpoint <*>
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
WARN org.apache.flink.runtime.resourcemanager.active.ActiveResourceManagerFactory: Configured size for \'<*>\' is ignored. Total memory size for TaskManagers are dynamically decided in fine-grained resource management.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Initializing job \'<*>\' (<*>).
TRACE org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Ignore \'<*>\' because the leadership runner is no longer running.
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Cancel <*> from <*>
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker$MultiSlotStatusUpdateListener: Slot <*> transitioned from <*> to <*> for job <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestExecutorImpl: <*> discarding <*> drained requests
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.state.heap.HeapKeyedStateBackendBuilder: Finished to build heap keyed state-backend.
INFO org.apache.flink.runtime.state.heap.HeapKeyedStateBackend: Initializing heap keyed state backend with stream factory.
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Shutting <*> down with application status <*>. Diagnostics <*>.
INFO org.apache.flink.runtime.scheduler.adaptivebatch.AdaptiveBatchScheduler: Parallelism of JobVertex: <*> (<*>) is decided to be <*>.
DEBUG org.apache.flink.runtime.jobmanager.ZooKeeperJobGraphStoreWatcher$JobGraphsPathCacheListener: Received <*> event (path: <*>)
DEBUG org.apache.flink.runtime.jobmanager.ZooKeeperJobGraphStoreWatcher$JobGraphsPathCacheListener: Received CHILD_REMOVED event notification for job <*>
INFO org.apache.flink.runtime.blob.FileSystemBlobStore: Creating highly available BLOB storage directory at <*>
DEBUG org.apache.flink.runtime.blob.FileSystemBlobStore: Created highly available BLOB storage directory at <*>
DEBUG org.apache.flink.runtime.metrics.ReporterSetup: Found reporter factory <*> at <*> 
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived JVM Overhead size (<*>) does not match the configured or default JVM Overhead fraction (<*>) from the configured Total Process Memory size (<*>). The derived JVM OVerhead size will be used.
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateCheckpointWriter: complete output, input completed: <*>
DEBUG org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcherImpl: Requesting paths for query services failed.
DEBUG org.apache.flink.runtime.scheduler.KvStateHandler: Lookup key-value state for job <*> with registration name <*>.
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Shutting down rest endpoint.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Initializing job \'<*>\' (<*>).
DEBUG org.apache.flink.runtime.state.SharedStateRegistryImpl: Discard state created before checkpoint <*> and not used afterwards
TRACE org.apache.flink.runtime.state.SharedStateRegistryImpl: Discard <*> state asynchronously
TRACE org.apache.flink.runtime.state.SharedStateRegistryImpl: Scheduled delete of state handle <*>.
TRACE org.apache.flink.runtime.state.SharedStateRegistryImpl: Scheduled delete of state handle <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close JobManager connection for job <*>.
<INIT> org.apache.flink.runtime.rest.handler.job.checkpoints.CheckpointingStatisticsHandler: Checkpointing has not been enabled.
INFO org.apache.flink.runtime.blob.BlobClient: Using ssl connection to the blob server
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
INFO org.apache.flink.runtime.io.network.netty.NettyClient: Transport type \'auto\': using NIO.
INFO org.apache.flink.runtime.io.network.netty.NettyClient: Successful initialization (took <*> ms).
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: The file <*> does not exist on the TaskExecutor <*>.
INFO org.apache.flink.runtime.source.coordinator.SourceCoordinator: Recovering subtask <*> to checkpoint <*> for source <*> to checkpoint.
DEBUG org.apache.flink.runtime.source.coordinator.SourceCoordinator: Adding splits back to the split enumerator of source <*>: <*>
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge: Using the request slot matching strategy: <*>
WARN org.apache.flink.runtime.resourcemanager.active.ActiveResourceManagerFactory: Configured size for \'<*>\' is ignored. Total memory size for TaskManagers are dynamically decided in fine-grained resource management.
DEBUG org.apache.flink.runtime.operators.sort.NormalizedKeySorter: Spilling sort buffer without large record handling.
DEBUG org.apache.flink.runtime.operators.sort.LargeRecordHandler: Initializing the large record spilling...
DEBUG org.apache.flink.runtime.operators.sort.LargeRecordHandler: Initializing the large record spilling...
DEBUG org.apache.flink.runtime.operators.sort.LargeRecordHandler: Initializing the large record spilling...
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to fail task externally <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
DEBUG org.apache.flink.runtime.rest.handler.taskmanager.AbstractTaskManagerFileHandler: Could not connect to ResourceManager right now.
WARN org.apache.flink.runtime.io.network.netty.CreditBasedPartitionRequestClientHandler: An Exception was thrown during error notification of a remote input channel.
DEBUG org.apache.flink.runtime.checkpoint.TaskStateAssignment: created <*> for task=<*> subtask=<*>
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Created directory <*> for file uploads.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Stopping TaskExecutor <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close ResourceManager connection <*>.
INFO org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Shutting down TaskExecutorStateChangelogStoragesManager.
INFO org.apache.flink.runtime.blob.BlobUtils: Found corrupted blob <*> under <*>. Deleting this blob.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Closing the slot manager.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Suspending the slot manager.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate: <*>: Retriggering partition request <*>:<*>.
TRACE org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Ignore \'<*>\' because the leadership runner is no longer running.
INFO org.apache.flink.runtime.security.modules.HadoopModule: Hadoop user set to <*>
INFO org.apache.flink.runtime.filecache.FileCache: removed file cache directory <*>
INFO org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestExecutorImpl: <*> discarding <*> drained requests
ERROR org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Received wrong AcknowledgeCheckpoint message for job <*> from <*> : <*>
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceTracker: Received notification for job <*> having lost resource <*>, but no such job was tracked.
INFO org.apache.flink.runtime.jobmanager.DefaultJobGraphStore: Stopping DefaultJobGraphStore.
DEBUG org.apache.flink.runtime.rest.RestClient: Sending request of class <*> to <*>:<*><*>
TRACE org.apache.flink.runtime.rest.RestClient: Adding file <*> to request.
ERROR org.apache.flink.runtime.taskexecutor.TaskExecutor: Fatal error occurred in TaskExecutor <*>.
DEBUG org.apache.flink.runtime.executiongraph.DefaultExecutionGraph: Received accumulator result for unknown execution <*>.
DEBUG org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Job <*> has been added to the <*> by another process.
<INIT> org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: TaskExecutorStateChangelogStoragesManager is already closed and cannot register a new StateChangelogStorage.
WARN org.apache.flink.runtime.io.network.netty.CreditBasedPartitionRequestClientHandler: An Exception was thrown during error notification of a remote input channel.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: The total number of slots exceeds the max limitation <*>, releasing the excess task executor.
INFO org.apache.flink.runtime.externalresource.ExternalResourceUtils: Enabled external resources: <*>
INFO org.apache.flink.runtime.leaderelection.DefaultMultipleComponentLeaderElectionService: Closing <*>.
DEBUG org.apache.flink.runtime.executiongraph.Execution: Ignoring transition of vertex <*> to <*> while being <*>.
DEBUG org.apache.flink.runtime.taskexecutor.DefaultJobLeaderService$JobManagerLeaderListener: Cannot reconnect because the JobManagerLeaderListener has already been stopped.
DEBUG org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler: Stopping the checkpoint services with state <*>.
WARN org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler: Failed to stop checkpoint services.
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Request a <*>
INFO org.apache.flink.runtime.scheduler.SchedulerBase: Triggering a manual checkpoint for job <*>.
DEBUG org.apache.flink.runtime.scheduler.ExecutionGraphHandler: No more input splits available
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: Discarding the results produced by task execution <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: Discarding the results produced by task execution <*>.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Stopping worker <*>.
DEBUG org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Ignore unrecognized worker <*>.
DEBUG org.apache.flink.runtime.scheduler.adaptive.allocator.SharedSlot: Allocating logical slot from shared slot (<*>)
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolService: Register new TaskExecutor <*>.
DEBUG org.apache.flink.runtime.executiongraph.DefaultExecutionGraph: Received accumulator result for unknown execution <*>.
INFO org.apache.flink.runtime.jobmanager.ZooKeeperJobGraphStoreWatcher: Stopping ZooKeeperJobGraphStoreWatcher 
DEBUG org.apache.flink.runtime.io.network.partition.PipelinedResultPartition: <*>: Received consumed notification for subpartition <*>.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartitionManager: Received consume notification from <*>.
DEBUG org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcherImpl: Retrieve metric query service gateway for <*>
WARN org.apache.flink.runtime.metrics.MetricRegistryImpl: Cannot unregister metric, because the MetricRegistry has already been shut down.
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to fail task externally <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: Task <*> is already in state <*>
INFO org.apache.flink.runtime.scheduler.adaptivebatch.AdaptiveBatchScheduler: Parallelism of JobVertex: <*> (<*>) is decided to be <*> according to forward group\'s parallelism.
INFO org.apache.flink.runtime.scheduler.adaptivebatch.AdaptiveBatchScheduler: Parallelism of JobVertex: <*> (<*>) is decided to be <*>.
INFO org.apache.flink.runtime.scheduler.DefaultScheduler: Starting scheduling with scheduling strategy [<*>]
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*> @ <*>
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Stopped TaskExecutor <*>.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate: <*>: Updated unknown input channel to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to cancel task <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException.
DEBUG org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException: <*>
INFO org.apache.flink.runtime.taskmanager.Task: Triggering cancellation of task code <*> (<*>).
DEBUG org.apache.flink.runtime.state.SavepointSnapshotStrategy: Asynchronous savepoint performed on empty keyed state at <*>. Returning null.
INFO org.apache.flink.runtime.leaderretrieval.DefaultLeaderRetrievalService: Stopping DefaultLeaderRetrievalService.
DEBUG org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable: Closing InPlaceMutableHashTable and releasing resources.
TRACE org.apache.flink.runtime.state.changelog.inmemory.InMemoryStateChangelogWriter: append, keyGroup=<*>, <*> bytes
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
DEBUG org.apache.flink.runtime.executiongraph.Execution: Ignoring transition of vertex <*> to <*> while being <*>.
ERROR org.apache.flink.runtime.executiongraph.DefaultExecutionGraph: Failed to deserialize final accumulator results.
INFO org.apache.flink.runtime.blob.FileSystemBlobStore: Creating highly available BLOB storage directory at <*>
DEBUG org.apache.flink.runtime.blob.FileSystemBlobStore: Created highly available BLOB storage directory at <*>
INFO org.apache.flink.runtime.security.modules.HadoopModule: Hadoop user set to <*>
INFO org.apache.flink.runtime.scheduler.adaptive.FailureResultUtil: Failing job.
WARN org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> with failure cause: <*>
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
DEBUG org.apache.flink.runtime.taskmanager.Task: Creating FileSystem stream leak safety net for task <*>
INFO org.apache.flink.runtime.taskmanager.Task: Loading JAR files for task <*>.
DEBUG org.apache.flink.runtime.taskmanager.Task: Getting user code class loader for task <*> at library cache manager took <*> milliseconds
DEBUG org.apache.flink.runtime.taskmanager.Task: Registering task at network: <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Freeing task resources for <*> (<*>).
DEBUG org.apache.flink.runtime.taskmanager.Task: Release task <*> network resources (state: <*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException.
DEBUG org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException: <*>
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Freeing task resources for <*> (<*>).
DEBUG org.apache.flink.runtime.taskmanager.Task: Release task <*> network resources (state: <*>).
INFO org.apache.flink.runtime.taskmanager.Task: Freeing task resources for <*> (<*>).
INFO org.apache.flink.runtime.taskmanager.Task: Freeing task resources for <*> (<*>).
DEBUG org.apache.flink.runtime.taskmanager.Task: Ensuring all FileSystem streams are closed for task <*>
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Could not allocate <*> more slots. The number of registered and pending slots is <*>, while the maximum is <*>.
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be configured. Will ignore that resource.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Allocating <*> task executors for redundancy.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Could not allocate <*> more slots. The number of registered and pending slots is <*>, while the maximum is <*>.
DEBUG org.apache.flink.runtime.checkpoint.TaskStateAssignment: created <*> for task=<*> subtask=<*>
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close ResourceManager connection <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Connecting to ResourceManager <*>.
INFO org.apache.flink.runtime.io.network.netty.NettyClient: Successful shutdown (took <*> ms).
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close ResourceManager connection <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Terminating registration attempts towards ResourceManager <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Connecting to ResourceManager <*>.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Closing the slot manager.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Suspending the slot manager.
WARN org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: The setting for \'<*> : <*>\' is invalid. Using default value of <*>
INFO org.apache.flink.runtime.taskexecutor.DefaultJobLeaderService: Stop job leader service.
DEBUG org.apache.flink.runtime.metrics.util.MetricUtils: More than one memory pool named \'Metaspace\' is present. Only the first pool was used for instantiating the \'<*>\' metrics.
WARN org.apache.flink.runtime.resourcemanager.active.ActiveResourceManagerFactory: Configured size for \'<*>\' is ignored. Total memory size for TaskManagers are dynamically decided in fine-grained resource management.
WARN org.apache.flink.runtime.resourcemanager.active.ActiveResourceManagerFactory: Configured size for \'<*>\' is ignored. Total memory size for TaskManagers are dynamically decided in fine-grained resource management.
INFO org.apache.flink.runtime.leaderretrieval.DefaultLeaderRetrievalService: Stopping DefaultLeaderRetrievalService.
WARN org.apache.flink.runtime.dispatcher.runner.JobDispatcherLeaderProcessFactoryFactory: Unexpected dirty JobResultStore entry: Job \'<*>\' is listed as dirty, isn\'t part of this single-job cluster, though.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Operator event for <*> - <*>
INFO org.apache.flink.runtime.state.filesystem.FsCheckpointMetadataOutputStream: Cannot create recoverable writer due to <*>, will use the ordinary writer.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
TRACE org.apache.flink.runtime.webmonitor.threadinfo.JobVertexThreadInfoTracker: ExecutionVertex <*> is currently not assigned
INFO org.apache.flink.runtime.scheduler.adapter.DefaultExecutionTopology: Built <*> new pipelined regions in <*> ms, total <*> pipelined regions currently.
DEBUG org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationHandlerImpl: Stop-with-savepoint transitioned from <*> to <*> on execution termination handling with all executions being finished for job <*>.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
WARN org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger or complete checkpoint <*> for job <*>. (<*> consecutive failed attempts so far)
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.webmonitor.WebMonitorEndpoint: Removing cache directory <*>
WARN org.apache.flink.runtime.rest.handler.PipelineErrorHandler: Unknown message received: <*>
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: Deploying <*> (attempt #<*>) with attempt id <*> and vertex id <*> to <*> with allocation id <*>
WARN org.apache.flink.runtime.blob.BlobWriter: Failed to offload value for job <*> to BLOB store.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
WARN org.apache.flink.runtime.dispatcher.runner.JobDispatcherLeaderProcessFactoryFactory: Unexpected dirty JobResultStore entry: Job \'<*>\' is listed as dirty, isn\'t part of this single-job cluster, though.
INFO org.apache.flink.runtime.state.heap.HeapKeyedStateBackendBuilder: Finished to build heap keyed state-backend.
INFO org.apache.flink.runtime.state.heap.HeapKeyedStateBackend: Initializing heap keyed state backend with stream factory.
ERROR org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Fatal error occurred in the cluster entrypoint.
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to fail task externally <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException.
DEBUG org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException: <*>
WARN org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> with failure cause: <*>
WARN org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> with failure cause: <*>
INFO org.apache.flink.runtime.taskmanager.Task: Triggering cancellation of task code <*> (<*>).
WARN org.apache.flink.runtime.jobmaster.DefaultJobMasterServiceProcess: Unexpected termination of the JobMasterService for job <*> under leader id <*>.
DEBUG org.apache.flink.runtime.jobmaster.DefaultJobMasterServiceProcess: Job <*> under leader id <*> failed.
WARN org.apache.flink.runtime.resourcemanager.ResourceManagerServiceImpl: Cannot deregister application. Resource manager service is not available.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Discard update for input partitions of task <*>. Task is no longer running.
DEBUG org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunner: Ignoring action because <*> has already been stopped.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotStatusSyncer: Received slot report from instance <*>: <*>.
WARN org.apache.flink.runtime.state.filesystem.FsStateBackend: Ignoring invalid file size threshold value (<*>): <*> - using default value <*> instead.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.taskexecutor.slot.TaskSlotTableImpl: Free slot <*>.
DEBUG org.apache.flink.runtime.scheduler.SchedulerBase: Archive global failure.
DEBUG org.apache.flink.runtime.rest.RestClient: Sending request of class <*> to <*>:<*><*>
TRACE org.apache.flink.runtime.rest.RestClient: Adding file <*> to request.
DEBUG org.apache.flink.runtime.dispatcher.Dispatcher: Cleanup for the job \'<*>\' has finished. Job has been marked as clean.
INFO org.apache.flink.runtime.zookeeper.FlinkZooKeeperQuorumPeer: Writing <*> to myid file in \'dataDir\'.
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Install default filesystem.
DEBUG org.apache.flink.runtime.checkpoint.StateAssignmentOperation: Rescaling maximum parallelism for JobVertex <*> from <*> to <*>
INFO org.apache.flink.runtime.taskexecutor.KvStateService: Shutting down the kvState service and its components.
DEBUG org.apache.flink.runtime.taskexecutor.KvStateService: Shutting down Queryable State Client Proxy.
DEBUG org.apache.flink.runtime.taskexecutor.KvStateService: Shutting down Queryable State Data Server.
INFO org.apache.flink.runtime.executiongraph.Execution: Discarding late registered partitions for <*> task <*>.
INFO org.apache.flink.runtime.operators.coordination.RecreateOnResetOperatorCoordinator: Resetting coordinator to checkpoint.
INFO org.apache.flink.runtime.taskexecutor.slot.TaskSlotTableImpl: Free slot <*>.
DEBUG org.apache.flink.runtime.jobmaster.DefaultJobMasterServiceProcess: Job <*> under leader id <*> reached a globally terminal state <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Ignoring the freeing of slot <*> because the TaskExecutor is shutting down.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager: Releasing local state under allocation id <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Cancel <*> from <*>
DEBUG org.apache.flink.runtime.execution.librarycache.BlobLibraryCacheManager$ResolvedClassLoader: Running class loader shutdown hook: <*>.
DEBUG org.apache.flink.runtime.scheduler.adaptive.allocator.SharedSlot: Returning logical slot to shared slot (<*>)
DEBUG org.apache.flink.runtime.scheduler.adaptive.allocator.SharedSlot: Release shared slot externally (<*>)
INFO org.apache.flink.runtime.rest.RestClient: Loaded channel outbound factory: <*>
DEBUG org.apache.flink.runtime.rest.RestClient: Rest client endpoint started.
DEBUG org.apache.flink.runtime.rest.handler.legacy.files.StaticFileServerHandler: Loading missing file from classloader: <*>
DEBUG org.apache.flink.runtime.rest.handler.legacy.files.StaticFileServerHandler: Unable to load requested file <*> from classloader
INFO org.apache.flink.runtime.leaderelection.DefaultMultipleComponentLeaderElectionService: Closing <*>.
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: Task <*> is already in state <*>
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be configured. Will ignore that resource.
WARN org.apache.flink.runtime.minicluster.MiniClusterJobClient: Shutdown of MiniCluster failed.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is less than its min value <*>, min value will be used instead
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Requesting new worker with resource spec <*>, current pending count: <*>.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Requested thread dump from unregistered TaskExecutor <*>.
INFO org.apache.flink.runtime.state.heap.HeapKeyedStateBackendBuilder: Finished to build heap keyed state-backend.
INFO org.apache.flink.runtime.state.heap.HeapKeyedStateBackend: Initializing heap keyed state backend with stream factory.
DEBUG org.apache.flink.runtime.executiongraph.DefaultExecutionGraph: ExecutionGraph <*> reached terminal state <*>.
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Stopping checkpoint coordinator for job <*>.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.state.heap.HeapRestoreOperation: Starting to restore from state handle: <*>.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Job <*> reached terminal state <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close ResourceManager connection <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Connecting to ResourceManager <*>.
DEBUG org.apache.flink.runtime.scheduler.adaptive.State: Cannot run \'<*>\' because the actual state is <*> and not <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be configured. Will ignore that resource.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Stopping the JobMaster for job \'<*>\' (<*>).
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
WARN org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger or complete checkpoint <*> for job <*>. (<*> consecutive failed attempts so far)
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.state.heap.HeapKeyedStateBackendBuilder: Finished to build heap keyed state-backend.
INFO org.apache.flink.runtime.executiongraph.DefaultExecutionGraph: Job <*> (<*>) switched from state <*> to <*>.
INFO org.apache.flink.runtime.blob.BlobUtils: Found corrupted blob <*> under <*>. Deleting this blob.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Stopping all currently running jobs of dispatcher <*>.
ERROR org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext: Uncaught Exception in Source Coordinator Executor
WARN org.apache.flink.runtime.net.ConnectionUtils: Could not connect to <*>. Selecting a local address using heuristics.
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Target address <*> and local address <*> share prefix - trying to connect.
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Preferring <*> (InetAddress.getLocalHost()) for local bind point over previous candidate <*>
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Choosing InetAddress.getLocalHost() address as a heuristic.
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Trying to connect to <*> from local address <*> with timeout <*>
WARN org.apache.flink.runtime.net.ConnectionUtils: Could not find any IPv address that is not loopback or link-local. Using localhost address.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is less than its min value <*>, min value will be used instead
DEBUG org.apache.flink.runtime.webmonitor.threadinfo.JobVertexThreadInfoTracker: Triggering thread info sample for tasks: <*>
INFO org.apache.flink.runtime.taskexecutor.slot.TaskSlotTableImpl: Activate slot <*>.
DEBUG org.apache.flink.runtime.state.SavepointSnapshotStrategy: Asynchronous savepoint performed on empty keyed state at <*>. Returning null.
INFO org.apache.flink.runtime.taskexecutor.slot.TaskSlotTableImpl: Slot with allocationId <*> already exist, with resource profile <*>, job id <*> and index <*>. The required index is <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerTracker: Remove pending task manager <*>.
DEBUG org.apache.flink.runtime.scheduler.adaptive.State: Cannot run \'<*>\' because the actual state is <*> and not <*>.
TRACE org.apache.flink.runtime.rest.RestClient: Adding file <*> to request.
INFO org.apache.flink.runtime.executiongraph.Execution: Discarding the results produced by task execution <*>.
INFO org.apache.flink.runtime.io.disk.BatchShuffleReadBufferPool: Batch shuffle IO buffer pool initialized: numBuffers=<*>, bufferSize=<*>.
WARN org.apache.flink.runtime.taskmanager.Task: Task \'<*>\' did not react to cancelling signal - <*>; it is stuck for <*> seconds in method:\n <*>
DEBUG org.apache.flink.runtime.state.SavepointSnapshotStrategy: Asynchronous savepoint performed on empty keyed state at <*>. Returning null.
ERROR org.apache.flink.runtime.registration.RetryingRegistration: Received unknown response to registration attempt: <*>
INFO org.apache.flink.runtime.registration.RetryingRegistration: Pausing and re-attempting registration in <*> ms
<INIT> org.apache.flink.runtime.taskmanager.MemoryLogger: Memory Logger
INFO org.apache.flink.runtime.io.disk.BatchShuffleReadBufferPool: Batch shuffle IO buffer pool initialized: numBuffers=<*>, bufferSize=<*>.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartitionManager: Registered <*>.
INFO org.apache.flink.runtime.io.network.partition.SortMergeResultPartition: Sort-merge partition <*> initialized, num sort buffers: <*>, num write buffers: <*>.
INFO org.apache.flink.runtime.resourcemanager.ResourceManager: Closing TaskExecutor connection <*> because: <*>
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close ResourceManager connection <*>.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Connecting to ResourceManager <*>
DEBUG org.apache.flink.runtime.operators.sort.NormalizedKeySorter: Spilling sort buffer without large record handling.
DEBUG org.apache.flink.runtime.operators.sort.LargeRecordHandler: Initializing the large record spilling...
DEBUG org.apache.flink.runtime.operators.sort.LargeRecordHandler: Initializing the large record spilling...
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Shutting down rest endpoint.
DEBUG org.apache.flink.runtime.checkpoint.TaskStateAssignment: created <*> for task=<*> subtask=<*>
DEBUG org.apache.flink.runtime.checkpoint.TaskStateAssignment: created <*> for task=<*> subtask=<*>
DEBUG org.apache.flink.runtime.io.network.partition.ResourceManagerPartitionTrackerImpl: There are no longer partitions being tracked for dataset <*>.
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Trying to connect to <*> from local address <*> with timeout <*>
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Preferring <*> (InetAddress.getLocalHost()) for local bind point over previous candidate <*>
INFO org.apache.flink.runtime.blob.BlobClient: Using ssl connection to the blob server
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Received JobGraph submission \'<*>\' (<*>).
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Submitting job \'<*>\' (<*>).
INFO org.apache.flink.runtime.leaderelection.DefaultLeaderElectionService: Starting DefaultLeaderElectionService with <*>.
WARN org.apache.flink.runtime.state.StateBackendLoader: MemoryStateBackend has been deprecated. Please use \'hashmap\' state backend instead with JobManagerCheckpointStorage for equivalent functionality
INFO org.apache.flink.runtime.state.StateBackendLoader: State backend is set to job manager <*>
INFO org.apache.flink.runtime.state.heap.HeapRestoreOperation: Starting to restore from state handle: <*>.
WARN org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: The setting for \'<*> : <*>\' is invalid. Using default value of <*>
ERROR org.apache.flink.runtime.source.coordinator.SourceCoordinatorProvider$CoordinatorExecutorThreadFactory: Thread \'<*>\' produced an uncaught exception. Failing the job.
DEBUG org.apache.flink.runtime.jobmaster.DefaultJobMasterServiceProcess: JobMasterService process for job <*> under leader id <*> has been terminated.
INFO org.apache.flink.runtime.io.network.buffer.NetworkBufferPool: Allocated <*> MB for network buffer pool (number of memory segments: <*>, bytes per segment: <*>).
DEBUG org.apache.flink.runtime.taskmanager.Task: Getting user code class loader for task <*> at library cache manager took <*> milliseconds
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: There was no registered job manager for job <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Ignoring checkpoint <*> notification for non-running task <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Register slots <*> from TaskManager <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Matched slot offer <*> to requirement <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Matched slot offer <*> to requirement <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Matched slot offer <*> to requirement <*>.
INFO org.apache.flink.runtime.highavailability.AbstractHaServices: Clean up the high availability data for job <*>.
INFO org.apache.flink.runtime.highavailability.AbstractHaServices: Finished cleaning up the high availability data for job <*>.
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Cancel <*> from <*>
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateCheckpointWriter: channel state write completed, checkpointId: <*>, handles: <*>
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateCheckpointWriter: channel state write completed, checkpointId: <*>, handles: <*>
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: Deploying <*> (attempt #<*>) with attempt id <*> and vertex id <*> to <*> with allocation id <*>
WARN org.apache.flink.runtime.blob.BlobWriter: Failed to offload value for job <*> to BLOB store.
DEBUG org.apache.flink.runtime.scheduler.adaptive.State: Cannot run \'<*>\' because the actual state is <*> and not <*>.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
WARN org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger or complete checkpoint <*> for job <*>. (<*> consecutive failed attempts so far)
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
WARN org.apache.flink.runtime.blob.TransientBlobCache: Failed to delete locally cached BLOB <*> at <*>
WARN org.apache.flink.runtime.blob.TransientBlobCache: Failed to delete locally cached BLOB <*> at <*>
WARN org.apache.flink.runtime.blob.BlobUtils: File upload for an existing file with key <*> for job <*>. This may indicate a duplicate upload or a hash collision. Ignoring newest upload.
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Could not delete the staging file <*> for blob key <*> and job <*>.
WARN org.apache.flink.runtime.blob.BlobCacheSizeTracker: The overall size of BLOBs in the cache exceeds the limit. Limit = [<*>], Current: [<*>], The size of next BLOB: [<*>].
INFO org.apache.flink.runtime.blob.AbstractBlobCache: Failed to copy from blob store. Downloading from BLOB server instead.
INFO org.apache.flink.runtime.blob.BlobClient: Downloading <*>/<*> from <*>
INFO org.apache.flink.runtime.blob.BlobClient: Using ssl connection to the blob server
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Could not delete the staging file <*> for blob key <*> and job <*>.
WARN org.apache.flink.runtime.blob.BlobCacheSizeTracker: Attempt to track a duplicated BLOB. This may indicate a duplicate upload or a hash collision. Ignoring newest upload. JobID = [<*>], BlobKey = [<*>]
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
DEBUG org.apache.flink.runtime.dispatcher.FileExecutionGraphInfoStore: Could not find execution graph information file for <*>. Estimating the size instead.
ERROR org.apache.flink.runtime.taskexecutor.TaskExecutor: Fatal error occurred in TaskExecutor <*>.
WARN org.apache.flink.runtime.blob.BlobUtils: File upload for an existing file with key <*> for job <*>. This may indicate a duplicate upload or a hash collision. Ignoring newest upload.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Worker <*> with resource spec <*> was requested in current attempt and has not registered. Current pending count after removing: <*>.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Worker <*> is terminated. Diagnostics: <*>
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived JVM Overhead size (<*>) does not match the configured or default JVM Overhead fraction (<*>) from the configured Total Process Memory size (<*>). The derived JVM OVerhead size will be used.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Requesting new worker with resource spec <*>, current pending count: <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Requesting new worker with resource spec <*>, current pending count: <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Requesting new worker with resource spec <*>, current pending count: <*>.
INFO org.apache.flink.runtime.resourcemanager.ResourceManager: Closing TaskExecutor connection <*> because: <*>
DEBUG org.apache.flink.runtime.jobmaster.JobMaster: Ignoring resource manager connection to <*> because it\'s duplicated or outdated.
WARN org.apache.flink.runtime.state.heap.CopyOnWriteStateMap: Maximum capacity of ^ in StateMap reached. Cannot increase hash map size. This can lead to more collisions and lower performance. Please consider scaling-out your job or using a different keyed state backend implementation!
INFO org.apache.flink.runtime.io.network.netty.NettyClient: Transport type \'auto\': using NIO.
INFO org.apache.flink.runtime.io.network.netty.NettyClient: Successful initialization (took <*> ms).
INFO org.apache.flink.runtime.io.network.netty.NettyClient: Transport type \'auto\': using NIO.
INFO org.apache.flink.runtime.io.network.netty.NettyServer: Successful initialization (took <*> ms). Listening on SocketAddress <*>.
INFO org.apache.flink.runtime.webmonitor.stats.TaskStatsRequestCoordinator: Shutting down task stats request coordinator.
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker$MultiSlotStatusUpdateListener: Slot <*> transitioned from <*> to <*> for job <*>.
DEBUG org.apache.flink.runtime.registration.RetryingRegistration: Could not resolve <*> address <*>, retrying in <*> ms.
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerTracker: Record the pending allocations <*>.
DEBUG org.apache.flink.runtime.taskexecutor.slot.FileSlotAllocationSnapshotPersistenceService: No allocation files to load.
DEBUG org.apache.flink.runtime.operators.sort.CombiningSpillingBehaviour: Combining buffer <*>.
DEBUG org.apache.flink.runtime.operators.sort.CombiningSpillingBehaviour: Combined and spilled buffer <*>.
DEBUG org.apache.flink.runtime.scheduler.KvStateHandler: Key value state unregistered for job <*> under name <*>.
INFO org.apache.flink.runtime.resourcemanager.ResourceManagerServiceImpl: Resource manager service is revoked leadership with session id <*>.
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*> @ <*>
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge: Release slot with slot request id <*>
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge: Could not find slot which has fulfilled slot request <*>. Ignoring the release operation.
ERROR org.apache.flink.runtime.webmonitor.retriever.LeaderRetriever: Received error from LeaderRetrievalService.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close JobManager connection for job <*>.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Initializing job \'<*>\' (<*>).
ERROR org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Reactive mode is configured for an unsupported cluster type. At the moment, reactive mode is only supported by standalone application clusters (bin/standalone-job.sh).
ERROR org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Reactive mode is configured for an unsupported cluster type. At the moment, reactive mode is only supported by standalone application clusters (bin/standalone-job.sh).
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Install default filesystem.
ERROR org.apache.flink.runtime.taskexecutor.TaskExecutor: Fatal error occurred in TaskExecutor <*>.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Received JobGraph submission \'<*>\' (<*>).
WARN org.apache.flink.runtime.dispatcher.Dispatcher: Ignoring JobGraph submission \'<*>\' (<*>) because the job already reached a globally-terminal state (i.e. <*>) in a previous execution.
DEBUG org.apache.flink.runtime.checkpoint.StateAssignmentOperation: Rescaling maximum parallelism for JobVertex <*> from <*> to <*>
DEBUG org.apache.flink.runtime.checkpoint.StateAssignmentOperation: Rescaling maximum parallelism for JobVertex <*> from <*> to <*>
DEBUG org.apache.flink.runtime.checkpoint.StateAssignmentOperation: Rescaling maximum parallelism for JobVertex <*> from <*> to <*>
WARN org.apache.flink.runtime.state.CheckpointStreamWithResultProvider: Exception when opening secondary/local checkpoint output stream. Continue only with the primary stream.
TRACE org.apache.flink.runtime.checkpoint.channel.ChannelStateWriterImpl: <*> adding output data, checkpoint <*>, channel: <*>, startSeqNum: <*>, num buffers: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Recovered slot allocation snapshots <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is less than its min value <*>, min value will be used instead
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Requesting new worker with resource spec <*>, current pending count: <*>.
ERROR org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext: Exception while handling result from async call in <*>. Triggering job failover.
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateCheckpointWriter: channel state write completed, checkpointId: <*>, handles: <*>
DEBUG org.apache.flink.runtime.executiongraph.Execution: The execution has no slot assigned. This indicates that the execution is no longer running.
DEBUG org.apache.flink.runtime.executiongraph.Execution: The execution has no slot assigned. This indicates that the execution is no longer running.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
TRACE org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Checkpoint <*> size: <*>Kb, duration: <*>ms
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Completed checkpoint <*> for job <*> (<*> bytes, checkpointDuration=<*> ms, finalizationTime=<*> ms).
DEBUG org.apache.flink.runtime.executiongraph.Execution: The execution has no slot assigned. This indicates that the execution is no longer running.
DEBUG org.apache.flink.runtime.executiongraph.Execution: The execution has no slot assigned. This indicates that the execution is no longer running.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate: Fail to get number of queued buffers :
INFO org.apache.flink.runtime.executiongraph.DefaultExecutionGraph: Job <*> (<*>) switched from state <*> to <*>.
INFO org.apache.flink.runtime.util.config.memory.MemoryBackwardsCompatibilityUtils: \'<*>\' is not specified, use the configured deprecated task manager heap value (<*>) for it.
INFO org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunner: <*> was granted leadership with leader id <*>. Creating new <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Ignoring the freeing of slot <*> because the TaskExecutor is shutting down.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Ignoring the freeing of slot <*> because the TaskExecutor is shutting down.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager: Releasing local state under allocation id <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager: Releasing local state under allocation id <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived JVM Overhead size (<*>) does not match the configured or default JVM Overhead fraction (<*>) from the configured Total Process Memory size (<*>). The derived JVM OVerhead size will be used.
DEBUG org.apache.flink.runtime.util.ZooKeeperUtils: znode <*> has been deleted
INFO org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration: Ignoring old (but still present) network buffer configuration via <*>.
DEBUG org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationHandlerImpl: Stop-with-savepoint transitioned from <*> to <*> on execution termination handling with all executions being finished for job <*>.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate: Converting recovered input channels (<*> channels)
DEBUG org.apache.flink.runtime.execution.librarycache.BlobLibraryCacheManager$ResolvedClassLoader: Running class loader shutdown hook: <*>.
INFO org.apache.flink.runtime.scheduler.SchedulerBase: Triggering a manual checkpoint for job <*>.
ERROR org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService: Embedded leader election service encountered a fatal error. Shutting down service.
INFO org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: Recovering checkpoints from <*>.
INFO org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: Found <*> checkpoints in <*>.
INFO org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: Trying to fetch <*> checkpoints from storage.
INFO org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: Trying to retrieve checkpoint <*>.
INFO org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: Trying to retrieve checkpoint <*>.
INFO org.apache.flink.runtime.util.ZooKeeperUtils: Initialized <*> in \'<*>\' with <*>.
INFO org.apache.flink.runtime.externalresource.ExternalResourceUtils: Enabled external resources: <*>
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: Could not find valid <*> for <*>. Will ignore that resource.
INFO org.apache.flink.runtime.source.coordinator.SourceCoordinator: Recovering subtask <*> to checkpoint <*> for source <*> to checkpoint.
DEBUG org.apache.flink.runtime.source.coordinator.SourceCoordinator: Adding splits back to the split enumerator of source <*>: <*>
WARN org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: The setting for \'<*> : <*>\' is invalid. Using default value of <*>
INFO org.apache.flink.runtime.scheduler.DefaultScheduler: Using failover strategy <*> for <*> (<*>).
WARN org.apache.flink.runtime.dispatcher.runner.JobDispatcherLeaderProcessFactoryFactory: Unexpected dirty JobResultStore entry: Job \'<*>\' is listed as dirty, isn\'t part of this single-job cluster, though.
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: No checkpoint found during restore.
DEBUG org.apache.flink.runtime.scheduler.ExecutionGraphHandler: Can not find Execution for attempt <*>.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Initializing job \'<*>\' (<*>).
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateWriterImpl: <*> starting checkpoint <*> (<*>)
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Invalid value for <*>. System will attempt no retries on failed fetch operations of BLOBs.
INFO org.apache.flink.runtime.blob.BlobUtils: Found corrupted blob <*> under <*>. Deleting this blob.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
TRACE org.apache.flink.runtime.state.IncrementalRemoteKeyedStateHandle: Registering IncrementalRemoteKeyedStateHandle for checkpoint <*> from backend with id <*>.
WARN org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> with failure cause: <*>
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
DEBUG org.apache.flink.runtime.taskmanager.Task: Creating FileSystem stream leak safety net for task <*>
INFO org.apache.flink.runtime.taskmanager.Task: Loading JAR files for task <*>.
DEBUG org.apache.flink.runtime.taskmanager.Task: Getting user code class loader for task <*> at library cache manager took <*> milliseconds
DEBUG org.apache.flink.runtime.taskmanager.Task: Registering task at network: <*>.
DEBUG org.apache.flink.runtime.io.network.TaskEventDispatcher: registering <*>
DEBUG org.apache.flink.runtime.io.network.TaskEventDispatcher: registering <*>
DEBUG org.apache.flink.runtime.io.network.TaskEventDispatcher: registering <*>
INFO org.apache.flink.runtime.taskmanager.Task: Freeing task resources for <*> (<*>).
DEBUG org.apache.flink.runtime.taskmanager.Task: Release task <*> network resources (state: <*>).
DEBUG org.apache.flink.runtime.io.network.TaskEventDispatcher: unregistering <*>
DEBUG org.apache.flink.runtime.io.network.TaskEventDispatcher: unregistering <*>
DEBUG org.apache.flink.runtime.io.network.TaskEventDispatcher: unregistering <*>
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException.
DEBUG org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException: <*>
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException.
DEBUG org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException: <*>
ERROR org.apache.flink.runtime.taskmanager.Task: Unexpected state in task <*> (<*>) during an exception: <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Freeing task resources for <*> (<*>).
DEBUG org.apache.flink.runtime.taskmanager.Task: Release task <*> network resources (state: <*>).
DEBUG org.apache.flink.runtime.io.network.TaskEventDispatcher: unregistering <*>
DEBUG org.apache.flink.runtime.taskmanager.Task: Ensuring all FileSystem streams are closed for task <*>
INFO org.apache.flink.runtime.source.coordinator.SourceCoordinator: Distributing maxAllowedWatermark=<*> to subTaskIds=<*>
ERROR org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext: Uncaught Exception in Source Coordinator Executor
ERROR org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext: Uncaught Exception in Source Coordinator Executor
DEBUG org.apache.flink.runtime.io.network.partition.consumer.RemoteChannelStateChecker: Cancelling task <*> after the producer of partition <*> with attempt ID <*> has entered state <*>.
INFO org.apache.flink.runtime.jobmaster.JobMaster: JobManager successfully registered at ResourceManager, leader id: <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerTracker: Free allocated slot with allocationId <*>.
DEBUG org.apache.flink.runtime.scheduler.adaptive.State: Cannot run \'<*>\' because the actual state is <*> and not <*>.
DEBUG org.apache.flink.runtime.scheduler.ExecutionGraphHandler: Send next input split <*>.
WARN org.apache.flink.runtime.rest.RestServerEndpoint: Upload directory <*> has been deleted externally. Previously uploaded files are no longer available.
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Using directory <*> for file uploads.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerTracker: Add task manager <*> with total resource <*> and default slot resource <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Received file upload request for file <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: The file <*> is unavailable on the TaskExecutor <*>.
DEBUG org.apache.flink.runtime.scheduler.adaptive.allocator.SharedSlot: Allocating logical slot from shared slot (<*>)
DEBUG org.apache.flink.runtime.scheduler.adaptive.allocator.SharedSlot: Allocating logical slot from shared slot (<*>)
DEBUG org.apache.flink.runtime.scheduler.adaptive.allocator.SharedSlot: Allocating logical slot from shared slot (<*>)
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Terminating registration attempts towards ResourceManager <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Connecting to ResourceManager <*>.
DEBUG org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler: Ignoring scheduled action because expected state <*> is not the actual state <*>.
DEBUG org.apache.flink.runtime.operators.sort.SorterInputGateway: Reading thread done.
DEBUG org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcherImpl: Requesting TaskManager\'s path for query services failed.
DEBUG org.apache.flink.runtime.jobmanager.DefaultJobGraphStore: Adding job graph <*> to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Terminating registration attempts towards ResourceManager <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Connecting to ResourceManager <*>.
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Upload directory <*> does not exist. 
WARN org.apache.flink.runtime.rest.RestServerEndpoint: Upload directory <*> cannot be created or is not writable.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Cannot find task to fail for execution <*> with exception:
WARN org.apache.flink.runtime.state.StateBackendLoader: MemoryStateBackend has been deprecated. Please use \'hashmap\' state backend instead with JobManagerCheckpointStorage for equivalent functionality
INFO org.apache.flink.runtime.state.StateBackendLoader: State backend is set to job manager <*>
WARN org.apache.flink.runtime.state.StateBackendLoader: Cannot decide whether state backend uses managed memory. Will reserve managed memory by default.
INFO org.apache.flink.runtime.blob.BlobUtils: Found corrupted blob <*> under <*>. Deleting this blob.
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Received decline message for unknown (too old?) checkpoint attempt <*> from task <*> of job <*> at <*> : <*>
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolService: Register new TaskExecutor <*>.
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
ERROR org.apache.flink.runtime.io.network.netty.PartitionRequestQueue: Encountered error while consuming partitions
DEBUG org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationHandlerImpl: Stop-with-savepoint transitioned from <*> to <*> on savepoint creation handling for job <*>.
INFO org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder: Coordinator checkpoint <*> for coordinator <*> is awaiting <*> pending events
WARN org.apache.flink.runtime.blob.BlobWriter: Failed to offload value for job <*> to BLOB store.
WARN org.apache.flink.runtime.blob.BlobWriter: Failed to offload value for job <*> to BLOB store.
DEBUG org.apache.flink.runtime.checkpoint.TaskStateAssignment: created <*> for task=<*> subtask=<*>
DEBUG org.apache.flink.runtime.checkpoint.TaskStateAssignment: created <*> for task=<*> subtask=<*>
DEBUG org.apache.flink.runtime.execution.librarycache.BlobLibraryCacheManager$ResolvedClassLoader: Running class loader shutdown hook: <*>.
WARN org.apache.flink.runtime.blob.BlobUtils: File upload for an existing file with key <*> for job <*>. This may indicate a duplicate upload or a hash collision. Ignoring newest upload.
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Could not delete the staging file <*> for blob key <*> and job <*>.
INFO org.apache.flink.runtime.blob.AbstractBlobCache: Failed to copy from blob store. Downloading from BLOB server instead.
INFO org.apache.flink.runtime.blob.BlobClient: Downloading <*>/<*> from <*>
INFO org.apache.flink.runtime.blob.BlobClient: Using ssl connection to the blob server
WARN org.apache.flink.runtime.blob.BlobUtils: File upload for an existing file with key <*> for job <*>. This may indicate a duplicate upload or a hash collision. Ignoring newest upload.
INFO org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration: Ignoring old (but still present) network buffer configuration via <*>.
DEBUG org.apache.flink.runtime.util.ZooKeeperUtils: znode <*> has been deleted
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Performing merge of <*> sorted streams.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartition: <*>: Releasing <*>.
ERROR org.apache.flink.runtime.io.network.netty.PartitionRequestQueue: Encountered error while consuming partitions
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to cancel task <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException.
DEBUG org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException: <*>
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Triggering cancellation of task code <*> (<*>).
DEBUG org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcherImpl: Query metrics for <*>.
DEBUG org.apache.flink.runtime.blob.FileSystemBlobStore: Copying from <*> to <*>.
ERROR org.apache.flink.runtime.jobmaster.JobMaster: Fatal error occurred on JobManager.
DEBUG org.apache.flink.runtime.blob.BlobServerConnection: Received GET request for BLOB <*>/<*> from <*>.
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Could not delete the staging file <*> for blob key <*> and job <*>.
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Could not delete the staging file <*> for blob key <*> and job <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is less than its min value <*>, min value will be used instead
WARN org.apache.flink.runtime.rest.RestServerEndpoint: Upload directory <*> has been deleted externally. Previously uploaded files are no longer available.
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Using directory <*> for file uploads.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor$JobManagerHeartbeatListener: Ignoring allocated slot report from job <*> because there is no active leader.
INFO org.apache.flink.runtime.scheduler.DefaultScheduler: Trying to recover from a global failure.
WARN org.apache.flink.runtime.blob.BlobWriter: Failed to offload value for job <*> to BLOB store.
INFO org.apache.flink.runtime.history.FsJobArchivist: Job <*> has been archived at <*>.
ERROR org.apache.flink.runtime.history.FsJobArchivist: Failed to archive job.
DEBUG org.apache.flink.runtime.util.ZooKeeperUtils: znode <*> has been deleted
INFO org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunner: <*> was granted leadership with leader id <*>. Creating new <*>.
WARN org.apache.flink.runtime.state.heap.CopyOnWriteStateMap: Maximum capacity of ^ in StateMap reached. Cannot increase hash map size. This can lead to more collisions and lower performance. Please consider scaling-out your job or using a different keyed state backend implementation!
DEBUG org.apache.flink.runtime.jobmaster.DefaultJobMasterServiceProcess: Initialization of the JobMasterService for job <*> under leader id <*> failed.
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker$MultiSlotStatusUpdateListener: Slot <*> transitioned from <*> to <*> for job <*>.
DEBUG org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler: Ignoring scheduled action because expected state <*> is not the actual state <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Declare new resource requirements for job <*>.<*>\trequired resources: <*><*>\tacquired resources: <*>
INFO org.apache.flink.runtime.checkpoint.hooks.MasterHooks: No master state to restore
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerTracker: Record the pending allocations <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be positive while finding <*>. Will ignore that resource.
INFO org.apache.flink.runtime.zookeeper.FlinkZooKeeperQuorumPeer: Writing <*> to myid file in \'dataDir\'.
DEBUG org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Job <*> has been added to the <*> by another process.
WARN org.apache.flink.runtime.minicluster.MiniClusterJobClient: Shutdown of MiniCluster failed.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Register slots <*> from TaskManager <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Matched slot offer <*> to requirement <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Matched slot offer <*> to requirement <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Could not match offer <*> to any outstanding requirement.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Terminating registration attempts towards ResourceManager <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Connecting to ResourceManager <*>.
ERROR org.apache.flink.runtime.webmonitor.threadinfo.JobVertexThreadInfoTracker$ThreadInfoSampleCompletionCallback: Error during stats completion.
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Shutting down rest endpoint.
DEBUG org.apache.flink.runtime.rest.RestClient: Rest endpoint shutdown complete.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is less than its min value <*>, min value will be used instead
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close JobManager connection for job <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager: Releasing local state under allocation id <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Establish JobManager connection for job <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Offer reserved slots to the leader of job <*>.
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Request a <*>
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Request a <*>
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Shutting down rest endpoint.
DEBUG org.apache.flink.runtime.rest.RestServerEndpoint: Register handler <*> under <*>@<*>.
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Shutting down rest endpoint.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting the slot manager.
WARN org.apache.flink.runtime.blob.BlobUtils: File upload for an existing file with key <*> for job <*>. This may indicate a duplicate upload or a hash collision. Ignoring newest upload.
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Could not delete the staging file <*> for blob key <*> and job <*>.
WARN org.apache.flink.runtime.rest.handler.PipelineErrorHandler: Unhandled exception
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.io.network.partition.ResourceManagerPartitionTrackerImpl: Processing shutdown of task executor <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerTracker: Add pending slot with allocationId <*>.
DEBUG org.apache.flink.runtime.execution.librarycache.BlobLibraryCacheManager$ResolvedClassLoader: Running class loader shutdown hook: <*>.
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Shutting <*> down with application status <*>. Diagnostics <*>.
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Request a <*>
ERROR org.apache.flink.runtime.rest.handler.AbstractHandler: Exception occurred in REST handler: <*>
DEBUG org.apache.flink.runtime.scheduler.KvStateHandler: Lookup key-value state for job <*> with registration name <*>.
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Triggering checkpoint <*> (type=<*>) @ <*> for job <*>.
DEBUG org.apache.flink.runtime.heartbeat.HeartbeatManagerSenderImpl: Trigger heartbeat request.
INFO org.apache.flink.runtime.blob.BlobUtils: Found corrupted blob <*> under <*>. Deleting this blob.
ERROR org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Reactive mode is configured for an unsupported cluster type. At the moment, reactive mode is only supported by standalone application clusters (bin/standalone-job.sh).
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Received <*> slot offers from TaskExecutor <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Matched slot offer <*> to requirement <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Matched slot offer <*> to requirement <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Could not match offer <*> to any outstanding requirement.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Acquired new resources; new total acquired resources: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Could not upload file <*>.
DEBUG org.apache.flink.runtime.dispatcher.Dispatcher: Dispatcher is unable to cancel job <*>: not found
INFO org.apache.flink.runtime.webmonitor.WebMonitorEndpoint: Web frontend listening at <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to cancel task <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
WARN org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> with failure cause: <*>
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
WARN org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> with failure cause: <*>
INFO org.apache.flink.runtime.taskmanager.Task: Triggering cancellation of task code <*> (<*>).
DEBUG org.apache.flink.runtime.taskexecutor.DefaultJobLeaderService$JobManagerLeaderListener$JobManagerRegisteredRpcConnection: Obsolete JobManager registration failure from <*> with leader session ID <*>.
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Shut down complete.
INFO org.apache.flink.runtime.metrics.util.MetricUtils: The \'<*>\' metrics will not be exposed because no pool named \'Metaspace\' could be found. This might be caused by the used JVM.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
DEBUG org.apache.flink.runtime.taskexecutor.DefaultJobLeaderService$JobManagerLeaderListener$JobManagerRegisteredRpcConnection: Encountered obsolete JobManager registration success from <*> with leader session ID <*>.
DEBUG org.apache.flink.runtime.taskmanager.Task: Release task <*> network resources (state: <*>).
DEBUG org.apache.flink.runtime.io.network.TaskEventDispatcher: unregistering <*>
DEBUG org.apache.flink.runtime.io.network.TaskEventDispatcher: unregistering <*>
DEBUG org.apache.flink.runtime.operators.sort.SorterInputGateway: Large record did not fit into a fresh sort buffer. Putting into large record store.
DEBUG org.apache.flink.runtime.operators.sort.LargeRecordHandler: Initializing the large record spilling...
WARN org.apache.flink.runtime.io.network.netty.PartitionRequestClientFactory: Failed to connect to <*>. Giving up.
WARN org.apache.flink.runtime.io.network.netty.PartitionRequestClientFactory: Failed to connect to <*>. Giving up.
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Invalid value for <*>. System will attempt no retries on failed fetch operations of BLOBs.
INFO org.apache.flink.runtime.blob.BlobUtils: Found corrupted blob <*> under <*>. Deleting this blob.
ERROR org.apache.flink.runtime.io.network.api.writer.RecordWriter: An exception happened while flushing the outputs
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to fail task externally <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: Task <*> is already in state <*>
PUT org.apache.flink.runtime.clusterframework.BootstrapTools: logging
INFO org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration: Ignoring old (but still present) network buffer configuration via <*>.
DEBUG org.apache.flink.runtime.io.disk.FileChannelManagerImpl: FileChannelManager uses directory <*> for spill files.
INFO org.apache.flink.runtime.io.network.NettyShuffleServiceFactory: Created a new <*> for storing result partitions of BLOCKING shuffles. Used directories:\n\t<*>
INFO org.apache.flink.runtime.io.network.buffer.NetworkBufferPool: Allocated <*> MB for network buffer pool (number of memory segments: <*>, bytes per segment: <*>).
WARN org.apache.flink.runtime.dispatcher.Dispatcher: Cleanup didn\'t succeed after job submission failed for job <*>.
ERROR org.apache.flink.runtime.dispatcher.Dispatcher: Failed to submit job <*>.
INFO org.apache.flink.runtime.io.disk.BatchShuffleReadBufferPool: Batch shuffle IO buffer pool initialized: numBuffers=<*>, bufferSize=<*>.
ERROR org.apache.flink.runtime.io.network.partition.SortMergeResultPartitionReadScheduler: Failed to request buffers for data reading.
DEBUG org.apache.flink.runtime.entrypoint.ClusterEntrypointUtils: Picked <*> randomly from the configured temporary directories to be used as working directory base.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Job <*> has been registered for cleanup in the JobResultStore after reaching a terminal state.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartitionFactory: <*>: Initialized <*>
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: The JobManager under <*> rejected the registration for job <*>: <*>. Releasing all job related resources.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
DEBUG org.apache.flink.runtime.leaderelection.DefaultLeaderElectionService: Revoke leadership of <*> (<*>@<*>).
DEBUG org.apache.flink.runtime.leaderelection.DefaultLeaderElectionService: Clearing the leader information on <*>.
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*>, seq <*>, <*> @ <*>
DEBUG org.apache.flink.runtime.jobmaster.JobMaster$1: Failing deployments <*> due to no longer being deployed.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Suspending the slot manager.
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateWriterImpl: <*> requested write result, checkpoint <*>
WARN org.apache.flink.runtime.io.network.netty.CreditBasedPartitionRequestClientHandler: An Exception was thrown during error notification of a remote input channel.
DEBUG org.apache.flink.runtime.dispatcher.Dispatcher: Cleanup for the job \'<*>\' has finished. Job has been marked as clean.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Registering task executor <*> under <*> at the slot manager.
WARN org.apache.flink.runtime.taskmanager.Task: Task \'<*>\' did not react to cancelling signal - <*>; it is stuck for <*> seconds in method:\n <*>
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: There was no registered job manager for job <*>.
INFO org.apache.flink.runtime.resourcemanager.ResourceManager: Registered job manager <*>@<*> for job <*>.
INFO org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestExecutorImpl: <*> discarding <*> drained requests
INFO org.apache.flink.runtime.taskexecutor.TaskManagerRunner: Using configured hostname/address for TaskManager: <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close ResourceManager connection <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Connecting to ResourceManager <*>.
ERROR org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService: Embedded leader election service encountered a fatal error. Shutting down service.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Close ResourceManager connection <*>: <*>
INFO org.apache.flink.runtime.jobmaster.JobMaster: Connecting to ResourceManager <*>
INFO org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService: Proposing leadership to contender <*>
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be configured. Will ignore that resource.
WARN org.apache.flink.runtime.resourcemanager.active.ActiveResourceManagerFactory: Configured size for \'<*>\' is ignored. Total memory size for TaskManagers are dynamically decided in fine-grained resource management.
DEBUG org.apache.flink.runtime.operators.sort.NormalizedKeySorter: Spilling sort buffer without large record handling.
DEBUG org.apache.flink.runtime.operators.sort.LargeRecordHandler: Initializing the large record spilling...
DEBUG org.apache.flink.runtime.operators.sort.LargeRecordHandler: Initializing the large record spilling...
DEBUG org.apache.flink.runtime.operators.sort.LargeRecordHandler: Initializing the large record spilling...
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Job <*> reached terminal state <*>.\n<*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor$JobManagerHeartbeatListener: Ignoring allocated slot report from job <*> because there is no active leader.
WARN org.apache.flink.runtime.blob.TransientBlobCache: Failed to delete locally cached BLOB <*> at <*>
WARN org.apache.flink.runtime.blob.BlobUtils: File upload for an existing file with key <*> for job <*>. This may indicate a duplicate upload or a hash collision. Ignoring newest upload.
WARN org.apache.flink.runtime.blob.BlobCacheSizeTracker: The overall size of BLOBs in the cache exceeds the limit. Limit = [<*>], Current: [<*>], The size of next BLOB: [<*>].
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor$JobLeaderListenerImpl: JobManager for job <*> with leader id <*> lost leadership.
WARN org.apache.flink.runtime.io.disk.iomanager.IOManager: IOManager failed to delete temporary file <*>
WARN org.apache.flink.runtime.io.disk.iomanager.IOManager: IOManager failed to delete temporary file <*>
DEBUG org.apache.flink.runtime.taskexecutor.DefaultJobLeaderService$JobManagerLeaderListener: New leader information for job <*>. Address: <*>, leader id: <*>.
WARN org.apache.flink.runtime.state.heap.CopyOnWriteStateMap: Maximum capacity of ^ in StateMap reached. Cannot increase hash map size. This can lead to more collisions and lower performance. Please consider scaling-out your job or using a different keyed state backend implementation!
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
DEBUG org.apache.flink.runtime.operators.sort.LargeRecordHandler: Initializing the large record spilling...
WARN org.apache.flink.runtime.zookeeper.FlinkZooKeeperQuorumPeer: No \'clientPort\' configured. Set to \'<*>\'.
WARN org.apache.flink.runtime.zookeeper.FlinkZooKeeperQuorumPeer: No \'initLimit\' configured. Set to \'<*>\'.
INFO org.apache.flink.runtime.zookeeper.FlinkZooKeeperQuorumPeer: Set peer and leader port of \'<*>\': \'<*>\' => \'<*>\'.
INFO org.apache.flink.runtime.taskexecutor.DefaultJobLeaderService: Stop job leader service.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Ignoring the freeing of slot <*> because the TaskExecutor is shutting down.
ERROR org.apache.flink.runtime.entrypoint.ClusterEntrypointUtils: Could not parse command line arguments <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Discard update for input gate partition <*> of result <*> in task <*>. The partition is no longer available.
INFO org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder: Coordinator checkpoint <*> for coordinator <*> is awaiting <*> pending events
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker: There was no slot registered with slot id <*>.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Job <*> reached terminal state <*>.
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestExecutorImpl: <*> loop terminated
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is less than its min value <*>, min value will be used instead
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Unregistering task executor <*> from the slot manager.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: There is no task executor registered with instance ID <*>. Ignoring this message.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager$TaskManagerHeartbeatListener: Received slot report from TaskManager <*> which is no longer registered.
DEBUG org.apache.flink.runtime.throughput.BufferDebloater: Buffer debloater init settings: gateIndex=<*>, targetTotalBufferSize=<*>, maxBufferSize=<*>, minBufferSize=<*>, bufferDebloatThresholdPercentages=<*>, numberOfSamples=<*>
DEBUG org.apache.flink.runtime.io.disk.FileChannelManagerImpl: FileChannelManager uses directory <*> for spill files.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Freeing slot <*>.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartition: <*>: Received release notification for subpartition <*>.
INFO org.apache.flink.runtime.io.network.NettyShuffleEnvironment: Starting the network environment and its components.
DEBUG org.apache.flink.runtime.io.network.NettyShuffleEnvironment: Starting network connection manager
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Terminating registration attempts towards ResourceManager <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Connecting to ResourceManager <*>.
INFO org.apache.flink.runtime.blob.FileSystemBlobStore: Creating highly available BLOB storage directory at <*>
DEBUG org.apache.flink.runtime.blob.FileSystemBlobStore: Created highly available BLOB storage directory at <*>
INFO org.apache.flink.runtime.util.ZooKeeperUtils: Enforcing default ACL for ZK connections
INFO org.apache.flink.runtime.util.ZooKeeperUtils: Using \'<*>\' as Zookeeper namespace.
DEBUG org.apache.flink.runtime.rest.handler.taskmanager.AbstractTaskManagerFileHandler: Load file from TaskManager <*>.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.ChannelStatePersister: <*> <*>, lastSeenBarrier = <*> (<*>) @ <*>
LOGEVENT org.apache.flink.runtime.io.network.partition.consumer.ChannelStatePersister: ignoring barrier
DEBUG org.apache.flink.runtime.io.network.partition.consumer.ChannelStatePersister: <*> <*>, lastSeenBarrier = <*> (<*>) @ <*>
LOGEVENT org.apache.flink.runtime.io.network.partition.consumer.ChannelStatePersister: found announcement for barrier
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*>, seq <*>, <*> @ <*>
TRACEINPUT org.apache.flink.runtime.io.network.partition.consumer.LocalInputChannel: LocalInputChannel#getNextBuffer
DEBUG org.apache.flink.runtime.throughput.BufferDebloater: Buffer debloater init settings: gateIndex=<*>, targetTotalBufferSize=<*>, maxBufferSize=<*>, minBufferSize=<*>, bufferDebloatThresholdPercentages=<*>, numberOfSamples=<*>
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGateFactory: <*>: Created <*> input channels (<*>).
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
DEBUG org.apache.flink.runtime.executiongraph.Execution: Concurrent canceling/failing of <*> while deployment was in progress.
DEBUG org.apache.flink.runtime.scheduler.adaptive.allocator.SharedSlot: Allocating logical slot from shared slot (<*>)
DEBUG org.apache.flink.runtime.io.disk.FileChannelManagerImpl: FileChannelManager uses directory <*> for spill files.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: Deploying <*> (attempt #<*>) with attempt id <*> and vertex id <*> to <*> with allocation id <*>
WARN org.apache.flink.runtime.blob.BlobWriter: Failed to offload value for job <*> to BLOB store.
INFO org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService: Received confirmation of leadership for leader <*> , session=<*>
WARN org.apache.flink.runtime.blob.BlobWriter: Failed to offload value for job <*> to BLOB store.
WARN org.apache.flink.runtime.blob.BlobWriter: Failed to offload value for job <*> to BLOB store.
WARN org.apache.flink.runtime.blob.BlobWriter: Failed to offload value for job <*> to BLOB store.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close ResourceManager connection <*>.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Connecting to ResourceManager <*>
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived JVM Overhead size (<*>) does not match the configured or default JVM Overhead fraction (<*>) from the configured Total Process Memory size (<*>). The derived JVM OVerhead size will be used.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Freeing slot <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager: Trying to free a slot <*> which has not been allocated. Ignoring this message.
DEBUG org.apache.flink.runtime.state.TaskLocalStateStoreImpl: Received confirmation for checkpoint <*> in subtask (<*> - <*> - <*>). Starting to prune history.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Confirm completed checkpoint <*>@<*> and last subsumed checkpoint <*> for <*>.
DEBUG org.apache.flink.runtime.blob.BlobServer: Shutting down connection <*>.
INFO org.apache.flink.runtime.blob.BlobServer: Stopped BLOB server at <*>:<*>
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Requested thread dump from unregistered TaskExecutor <*>.
DEBUG org.apache.flink.runtime.operators.sort.NormalizedKeySorter: Put a large record ( > into the sort buffer
DEBUG org.apache.flink.runtime.io.network.partition.consumer.ChannelStatePersister: <*> <*>, lastSeenBarrier = <*> (<*>) @ <*>
DEBUG org.apache.flink.runtime.scheduler.KvStateHandler: Request of key-value state location for unknown job <*> received.
ERROR org.apache.flink.runtime.util.Hardware: Cannot determine physical memory of machine for MacOS host
WARN org.apache.flink.runtime.state.heap.CopyOnWriteStateMap: Maximum capacity of ^ in StateMap reached. Cannot increase hash map size. This can lead to more collisions and lower performance. Please consider scaling-out your job or using a different keyed state backend implementation!
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Stopping worker <*>.
DEBUG org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Ignore unrecognized worker <*>.
DEBUG org.apache.flink.runtime.operators.sort.NormalizedKeySorter: Put a large record ( > into the sort buffer
INFO org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils: The derived Network Memory size (<*>) does not match the configured Network Memory fraction (<*>) from the configured Total Flink Memory size (<*>). The derived Network Memory size will be used.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor$JobLeaderListenerImpl: JobManager for job <*> with leader id <*> lost leadership.
INFO org.apache.flink.runtime.blob.FileSystemBlobStore: Creating highly available BLOB storage directory at <*>
DEBUG org.apache.flink.runtime.blob.FileSystemBlobStore: Created highly available BLOB storage directory at <*>
DEBUG org.apache.flink.runtime.dispatcher.FileExecutionGraphInfoStore: Could not find execution graph information file for <*>. Estimating the size instead.
WARN org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: The setting for \'<*> : <*>\' is invalid. Using default value of <*>
ERROR org.apache.flink.runtime.taskexecutor.TaskManagerRunner: Fatal error occurred while executing the TaskManager. Shutting it down...
INFO org.apache.flink.runtime.taskexecutor.DefaultJobLeaderService$JobManagerLeaderListener$JobManagerRegisteredRpcConnection: Successful registration at job manager <*> for job <*>.
DEBUG org.apache.flink.runtime.io.network.partition.BufferWritingResultPartition: Created <*>
DEBUG org.apache.flink.runtime.webmonitor.threadinfo.JobVertexThreadInfoTracker$ThreadInfoSampleCompletionCallback: Failed to gather a thread info sample for <*>
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Stopping all currently running jobs of dispatcher <*>.
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Release shared slot (<*>)
DEBUG org.apache.flink.runtime.scheduler.adaptive.allocator.SharedSlot: Release shared slot externally (<*>)
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to fail task externally <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: Task <*> is already in state <*>
ERROR org.apache.flink.runtime.io.network.netty.PartitionRequestQueue: Encountered error while consuming partitions
INFO org.apache.flink.runtime.taskexecutor.slot.TaskSlotTableImpl: Free slot <*>.
DEBUG org.apache.flink.runtime.rest.RestServerEndpoint: Register handler <*> under <*>@<*>.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Job <*> reached terminal state <*>.\n<*>
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Stopping checkpoint coordinator for job <*>.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceTracker: Received notification for job <*> having new resource requirements <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.JobScopedResourceTracker: Detected excess resources for job <*>: <*>
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.JobScopedResourceTracker: There are <*> excess resources for job <*> before re-assignment.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceTracker: Stopping tracking of resources for job <*>.
INFO org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils: The derived Network Memory size (<*>) does not match the configured Network Memory fraction (<*>) from the configured Total Flink Memory size (<*>). The derived Network Memory size will be used.
TRACE org.apache.flink.runtime.checkpoint.channel.ChannelStateWriterImpl: <*> adding output data, checkpoint <*>, channel: <*>, startSeqNum: <*>, num buffers: <*>
WARN org.apache.flink.runtime.metrics.MetricRegistryImpl: Cannot register metric, because the MetricRegistry has already been shut down.
INFO org.apache.flink.runtime.scheduler.DefaultScheduler: Trying to recover from a global failure.
WARN org.apache.flink.runtime.io.disk.iomanager.IOManager: IOManager failed to delete temporary file <*>
WARN org.apache.flink.runtime.io.disk.iomanager.IOManager: IOManager failed to delete temporary file <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Confirm completed checkpoint <*>@<*> and last subsumed checkpoint <*> for <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Ignoring checkpoint <*> notification for non-running task <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Ignoring checkpoint <*> notification for non-running task <*>.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
WARN org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger or complete checkpoint <*> for job <*>. (<*> consecutive failed attempts so far)
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.leaderretrieval.DefaultLeaderRetrievalService: Stopping DefaultLeaderRetrievalService.
INFO org.apache.flink.runtime.jobmaster.JobMaster: JobManager successfully registered at ResourceManager, leader id: <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to fail task externally <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
WARN org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> with failure cause: <*>
INFO org.apache.flink.runtime.taskmanager.Task: Triggering cancellation of task code <*> (<*>).
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Shutting down rest endpoint.
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: No SlotExecutionVertexAssignment for logical <*> from physical <*>}
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: No checkpoint found during restore.
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Invalid value for <*>. System will attempt no retries on failed fetch operations of BLOBs.
INFO org.apache.flink.runtime.blob.BlobUtils: Found corrupted blob <*> under <*>. Deleting this blob.
INFO org.apache.flink.runtime.blob.BlobUtils: Found corrupted blob <*> under <*>. Deleting this blob.
WARN org.apache.flink.runtime.io.network.netty.CreditBasedPartitionRequestClientHandler: An Exception was thrown during error notification of a remote input channel.
DEBUG org.apache.flink.runtime.memory.MemoryManager: Initialized MemoryManager with total memory size <*> and page size <*>.
INFO org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Trying to recover job with job id <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Ignoring checkpoint <*> notification for non-running task <*>.
INFO org.apache.flink.runtime.registration.RetryingRegistration: Resolved <*> address, beginning registration
DEBUG org.apache.flink.runtime.registration.RetryingRegistration: Registration at <*> attempt <*> (timeout=<*>ms)
WARN org.apache.flink.runtime.state.filesystem.FsStateBackend: Ignoring invalid file size threshold value (<*>): <*> - using default value <*> instead.
DEBUG org.apache.flink.runtime.rest.RestClient: Sending request of class <*> to <*>:<*><*>
TRACE org.apache.flink.runtime.rest.RestClient: Adding file <*> to request.
DEBUG org.apache.flink.runtime.webmonitor.threadinfo.JobVertexThreadInfoTracker: Triggering thread info sample for tasks: <*>
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close ResourceManager connection <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Connecting to ResourceManager <*>.
INFO org.apache.flink.runtime.metrics.util.MetricUtils: The \'<*>\' metrics will not be exposed because no pool named \'Metaspace\' could be found. This might be caused by the used JVM.
INFO org.apache.flink.runtime.scheduler.adaptive.StateWithExecutionGraph: Savepoint stored in <*>. Now cancelling <*>.
DEBUG org.apache.flink.runtime.jobmaster.DefaultJobMasterServiceProcess: JobMasterService process for job <*> under leader id <*> has been terminated.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Releasing slot [<*>] of registered TaskExecutor <*> failed. Discarding slot.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be positive while finding <*>. Will ignore that resource.
INFO org.apache.flink.runtime.externalresource.ExternalResourceUtils: Enabled external resources: <*>
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: Could not find driver class name for <*>. Please make sure <*> is configured.
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: Could not found legal amount configuration for <*>.
WARN org.apache.flink.runtime.state.heap.CopyOnWriteStateMap: Maximum capacity of ^ in StateMap reached. Cannot increase hash map size. This can lead to more collisions and lower performance. Please consider scaling-out your job or using a different keyed state backend implementation!
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Close ResourceManager connection <*>: <*>
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Upload directory <*> does not exist. 
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Created directory <*> for file uploads.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Cannot find task to fail for execution <*> with exception:
DEBUG org.apache.flink.runtime.executiongraph.DefaultExecutionGraph: Could not properly suspend the execution graph.
DEBUG org.apache.flink.runtime.executiongraph.DefaultExecutionGraph: ExecutionGraph <*> reached terminal state <*>.
INFO org.apache.flink.runtime.executiongraph.DefaultExecutionGraph: Job <*> has been suspended.
DEBUG org.apache.flink.runtime.registration.RetryingRegistration: Registration at <*> attempt <*> (timeout=<*>ms)
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge: Release slot with slot request id <*>
INFO org.apache.flink.runtime.blob.FileSystemBlobStore: Creating highly available BLOB storage directory at <*>
DEBUG org.apache.flink.runtime.blob.FileSystemBlobStore: Created highly available BLOB storage directory at <*>
DEBUG org.apache.flink.runtime.throughput.BufferDebloater: Buffer debloater init settings: gateIndex=<*>, targetTotalBufferSize=<*>, maxBufferSize=<*>, minBufferSize=<*>, bufferDebloatThresholdPercentages=<*>, numberOfSamples=<*>
INFO org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint: Failed to load web based job submission extension. Probable reason: flink-runtime-web is not in the classpath.
INFO org.apache.flink.runtime.dispatcher.runner.AbstractDispatcherLeaderProcess: Stopping <*>.
INFO org.apache.flink.runtime.state.StateBackendLoader: Loading state backend via factory <*>
INFO org.apache.flink.runtime.webmonitor.WebMonitorEndpoint: <*> lost leadership
INFO org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Clearing resource requirements of job <*>
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Could not allocate <*> more slots. The number of registered and pending slots is <*>, while the maximum is <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Could not allocate <*> more slots. The number of registered and pending slots is <*>, while the maximum is <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Could not fulfill resource requirements of job <*>. Free slots: <*>
INFO org.apache.flink.runtime.security.contexts.HadoopSecurityContextFactory: Cannot install HadoopSecurityContext because Hadoop cannot be found in the Classpath.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Stopped TaskExecutor <*>.
DEBUG org.apache.flink.runtime.io.disk.FileChannelManagerImpl: FileChannelManager uses directory <*> for spill files.
INFO org.apache.flink.runtime.io.disk.iomanager.IOManager: Created a new <*> for spilling of task related data to disk (joins, sorting, ...). Used directories:\n\t<*>
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
WARN org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: The setting for \'<*> : <*>\' is invalid. Using default value of <*>
INFO org.apache.flink.runtime.scheduler.DefaultScheduler: Using failover strategy <*> for <*> (<*>).
DEBUG org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Completing the result for job <*>.
DEBUG org.apache.flink.runtime.rest.handler.taskmanager.AbstractTaskManagerFileHandler: Load file from TaskManager <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.blob.BlobClient: Using ssl connection to the blob server
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
DEBUG org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Job <*> has been added to the <*> by another process.
ERROR org.apache.flink.runtime.rest.RestClient$ClientHandler: Implementation error: Received a response that wasn\'t a FullHttpResponse.
DEBUG org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Job <*> has been added to the <*> by another process.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate: Fail to get size of queued buffers :
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
WARN org.apache.flink.runtime.blob.BlobCacheSizeTracker: The overall size of BLOBs in the cache exceeds the limit. Limit = [<*>], Current: [<*>], The size of next BLOB: [<*>].
WARN org.apache.flink.runtime.state.CheckpointStreamWithResultProvider: Exception when opening secondary/local checkpoint output stream. Continue only with the primary stream.
INFO org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService: Proposing leadership to contender <*>
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerTracker: Remove pending task manager <*>.
DEBUG org.apache.flink.runtime.blob.FileSystemBlobStore: Deleting <*>.
INFO org.apache.flink.runtime.scheduler.adaptive.FailureResultUtil: Restarting job.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Job <*> reached terminal state <*>.
INFO org.apache.flink.runtime.state.heap.HeapKeyedStateBackendBuilder: Finished to build heap keyed state-backend.
INFO org.apache.flink.runtime.state.heap.HeapKeyedStateBackend: Initializing heap keyed state backend with stream factory.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor$JobLeaderListenerImpl: JobManager for job <*> with leader id <*> lost leadership.
INFO org.apache.flink.runtime.taskexecutor.TaskManagerRunner: Starting TaskManager with ResourceID: <*>
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be positive while finding <*>. Will ignore that resource.
DEBUG org.apache.flink.runtime.metrics.util.MetricUtils: More than one memory pool named \'Metaspace\' is present. Only the first pool was used for instantiating the \'<*>\' metrics.
DEBUG org.apache.flink.runtime.io.disk.FileChannelManagerImpl: FileChannelManager uses directory <*> for spill files.
INFO org.apache.flink.runtime.query.QueryableStateUtils: Could not load Queryable State Client Proxy. Probable reason: flink-queryable-state-runtime is not in the classpath. To enable Queryable State, please move the flink-queryable-state-runtime jar from the opt to the lib folder.
INFO org.apache.flink.runtime.taskexecutor.KvStateService: Starting the kvState service and its components.
DEBUG org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager: Start <*> with local state root directories <*>.
ERROR org.apache.flink.runtime.util.Hardware: Cannot determine the size of the physical memory for Linux host (using \'/proc/meminfo\'). Unexpected format.
WARN org.apache.flink.runtime.state.heap.CopyOnWriteStateMap: Maximum capacity of ^ in StateMap reached. Cannot increase hash map size. This can lead to more collisions and lower performance. Please consider scaling-out your job or using a different keyed state backend implementation!
DEBUG org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Completing the result for job <*>.
INFO org.apache.flink.runtime.metrics.util.MetricUtils: The \'<*>\' metrics will not be exposed because no pool named \'Metaspace\' could be found. This might be caused by the used JVM.
INFO org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunner: <*> was granted leadership with leader id <*>. Creating new <*>.
DEBUG org.apache.flink.runtime.dispatcher.Dispatcher: Cleanup for the job \'<*>\' has finished. Job has been marked as clean.
DEBUG org.apache.flink.runtime.webmonitor.history.HistoryServerUtils: Not hostname has been specified for the HistoryServer. This indicates that it has not been started.
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Stopping checkpoint coordinator for job <*>.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
DEBUG org.apache.flink.runtime.executiongraph.Execution: The execution has no slot assigned. This indicates that the execution is no longer running.
DEBUG org.apache.flink.runtime.executiongraph.Execution: The execution has no slot assigned. This indicates that the execution is no longer running.
TRACE org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Checkpoint <*> size: <*>Kb, duration: <*>ms
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Completed checkpoint <*> for job <*> (<*> bytes, checkpointDuration=<*> ms, finalizationTime=<*> ms).
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
DEBUG org.apache.flink.runtime.executiongraph.Execution: The execution has no slot assigned. This indicates that the execution is no longer running.
INFO org.apache.flink.runtime.blob.FileSystemBlobStore: Creating highly available BLOB storage directory at <*>
DEBUG org.apache.flink.runtime.blob.FileSystemBlobStore: Created highly available BLOB storage directory at <*>
INFO org.apache.flink.runtime.util.ZooKeeperUtils: Enforcing default ACL for ZK connections
INFO org.apache.flink.runtime.util.ZooKeeperUtils: Using \'<*>\' as Zookeeper namespace.
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker$MultiSlotStatusUpdateListener: Slot <*> transitioned from <*> to <*> for job <*>.
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Failed <*>
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Remove <*>
DEBUG org.apache.flink.runtime.scheduler.adaptive.allocator.SharedSlot: Release shared slot externally (<*>)
DEBUG org.apache.flink.runtime.state.SavepointSnapshotStrategy: Asynchronous savepoint performed on empty keyed state at <*>. Returning null.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: The JobManager under <*> rejected the registration for job <*>: <*>. Releasing all job related resources.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
ERROR org.apache.flink.runtime.util.Hardware: Cannot determine the size of the physical memory for Linux host (using \'/proc/meminfo\'). Unexpected format.
WARN org.apache.flink.runtime.minicluster.MiniClusterJobClient: Shutdown of MiniCluster failed.
DEBUG org.apache.flink.runtime.dispatcher.FileExecutionGraphInfoStore: Could not find execution graph information file for <*>. Estimating the size instead.
DEBUG org.apache.flink.runtime.scheduler.adaptive.State: Cannot run \'<*>\' because the actual state is <*> and not <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: The JobManager under <*> rejected the registration for job <*>: <*>. Releasing all job related resources.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Ignoring the freeing of slot <*> because the TaskExecutor is shutting down.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
ERROR org.apache.flink.runtime.util.Hardware: Cannot determine the size of the physical memory for Windows host (using \'wmic memorychip\')
DEBUG org.apache.flink.runtime.metrics.util.MetricUtils: More than one memory pool named \'Metaspace\' is present. Only the first pool was used for instantiating the \'<*>\' metrics.
INFO org.apache.flink.runtime.state.heap.HeapRestoreOperation: Finished restoring from state handle: <*>.
INFO org.apache.flink.runtime.metrics.util.MetricUtils: The \'<*>\' metrics will not be exposed because no pool named \'Metaspace\' could be found. This might be caused by the used JVM.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: Discarding the results produced by task execution <*>.
DEBUG org.apache.flink.runtime.leaderretrieval.DefaultLeaderRetrievalService: New leader information: Leader=<*>, session ID=<*>.
ERROR org.apache.flink.runtime.operators.sort.CombineValueIterator: Error retrieving a value from a buffer.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartitionManager: Registered <*>.
DEBUG org.apache.flink.runtime.scheduler.ExecutionGraphHandler: Can not find Execution for attempt <*>.
TRACE org.apache.flink.runtime.rest.handler.router.RouterHandler: Request could not be routed to any handler. Uri:<*> Method:<*>
ERROR org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService: Embedded leader election service encountered a fatal error. Shutting down service.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Request <*> file upload from TaskExecutor <*>.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Request upload of file <*> from unregistered TaskExecutor <*>.
TRACE org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Ignore \'<*>\' because the leadership runner is no longer running.
INFO org.apache.flink.runtime.leaderelection.DefaultMultipleComponentLeaderElectionService: Closing <*>.
DEBUG org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable: Closing InPlaceMutableHashTable and releasing resources.
WARN org.apache.flink.runtime.rest.handler.util.HandlerRequestUtils: Configuring the job submission via query parameters is deprecated. Please migrate to submitting a JSON request instead.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
DEBUG org.apache.flink.runtime.webmonitor.stats.TaskStatsRequestCoordinator: Received late stats sample <*> of task <*>
WARN org.apache.flink.runtime.resourcemanager.StandaloneResourceManagerFactory: Config option <*> will be ignored in standalone mode.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration: Config key <*> is deprecated; use <*> instead.
DEBUG org.apache.flink.runtime.operators.AllGroupCombineDriver: AllGroupCombine starting.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotStatusSyncer: Starting allocation of slot <*> from <*> for job <*> with resource profile <*>.
INFO org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestExecutorImpl: <*> discarding <*> drained requests
TRACE org.apache.flink.runtime.rest.FileUploadHandler: Received http content.
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Upload directory <*> does not exist. 
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Created directory <*> for file uploads.
TRACE org.apache.flink.runtime.rest.FileUploadHandler: Upload of file <*> into destination <*> complete.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Could not allocate <*> more slots. The number of registered and pending slots is <*>, while the maximum is <*>.
DEBUG org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable: Closing InPlaceMutableHashTable and releasing resources.
INFO org.apache.flink.runtime.io.network.NettyShuffleEnvironment: Shutting down the network environment and its components.
DEBUG org.apache.flink.runtime.io.network.NettyShuffleEnvironment: Shutting down network connection manager
DEBUG org.apache.flink.runtime.io.network.NettyShuffleEnvironment: Shutting down intermediate result partition manager
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartitionManager: Releasing <*> partitions because of shutdown.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartitionManager: Successful shutdown.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Worker <*> with resource spec <*> was requested in current attempt and has not registered. Current pending count after removing: <*>.
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker$MultiSlotStatusUpdateListener: Slot <*> transitioned from <*> to <*> for job <*>.
INFO org.apache.flink.runtime.checkpoint.StateAssignmentOperation: Skipped checkpoint state for operator <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close JobManager connection for job <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to fail task externally <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException.
DEBUG org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException: <*>
WARN org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> with failure cause: <*>
INFO org.apache.flink.runtime.taskmanager.Task: Triggering cancellation of task code <*> (<*>).
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to fail task externally <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: Task <*> is already in state <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Ignoring the freeing of slot <*> because the TaskExecutor is shutting down.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager: Releasing local state under allocation id <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager: Releasing local state under allocation id <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Establish JobManager connection for job <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: There are no unassigned slots for the job <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration: Config key <*> is deprecated; use <*> instead.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Requested log list from unregistered TaskExecutor <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Discard update for input gate partition <*> of result <*> in task <*>. The partition is no longer available.
DEBUG org.apache.flink.runtime.scheduler.KvStateHandler: Key value state registered for job <*> under name <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: Discarding the results produced by task execution <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: Discarding the results produced by task execution <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: Discarding the results produced by task execution <*>.
DEBUG org.apache.flink.runtime.executiongraph.Execution: Sending out cancel request, to remove task execution from TaskManager.
WARN org.apache.flink.runtime.metrics.groups.AbstractMetricGroup: Ignoring attempted registration of a metric due to being null for name <*>.
WARN org.apache.flink.runtime.io.network.partition.ResultPartitionFactory: Cannot determine memory architecture. Using pure file-based shuffle.
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*> @ <*>
TRACERECOVER org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel: InputChannelRecoveredStateHandler#recover
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*> @ <*>
TRACERECOVER org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel: InputChannelRecoveredStateHandler#recover
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*> @ <*>
TRACERECOVER org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel: InputChannelRecoveredStateHandler#recover
INFO org.apache.flink.runtime.jobmaster.JobMaster: Initializing job \'<*>\' (<*>).
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerTracker: Record the pending allocations <*>.
DEBUG org.apache.flink.runtime.state.changelog.StateChangelogHandleStreamHandleReader$1: read at <*> from <*>
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Request upload of file <*> from TaskExecutor <*>.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Request upload of file <*> from unregistered TaskExecutor <*>.
INFO org.apache.flink.runtime.dispatcher.MiniDispatcher: Shutting down cluster after job with state <*>, jobCancelled: <*>, executionMode: <*>
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
DEBUG org.apache.flink.runtime.executiongraph.Execution: Ignoring transition of vertex <*> to <*> while being <*>.
TRACE org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Checkpoint <*> size: <*>Kb, duration: <*>ms
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
DEBUG org.apache.flink.runtime.leaderelection.ZooKeeperMultipleComponentLeaderElectionDriver: <*> lost the leadership.
DEBUG org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationHandlerImpl: Stop-with-savepoint transitioned from <*> to <*> on savepoint creation handling for job <*>.
DEBUG org.apache.flink.runtime.scheduler.adaptive.State: Cannot run \'<*>\' because the actual state is <*> and not <*>.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.ChannelStatePersister: <*> <*>, lastSeenBarrier = <*> (<*>) @ <*>
LOGEVENT org.apache.flink.runtime.io.network.partition.consumer.ChannelStatePersister: stopPersisting
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Preferring <*> (InetAddress.getLocalHost()) for local bind point over previous candidate <*>
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Completed checkpoint <*> for job <*> (<*> bytes, checkpointDuration=<*> ms, finalizationTime=<*> ms).
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Discard update for input gate partition <*> of result <*> in task <*>. The partition is no longer available.
WARN org.apache.flink.runtime.metrics.MetricRegistryImpl: Delimiter for reporter index <*> not found, returning global delimiter.
INFO org.apache.flink.runtime.taskexecutor.slot.TaskSlotTableImpl: Activate slot <*>.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Closing the slot manager.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Suspending the slot manager.
DEBUG org.apache.flink.runtime.blob.BlobServer: Received PUT call for BLOB of job <*>.
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Could not delete the staging file <*> for blob key <*> and job <*>.
ERROR org.apache.flink.runtime.util.ClusterUncaughtExceptionHandler: WARNING: Thread \'<*>\' produced an uncaught exception. If you want to fail on uncaught exceptions, then configure <*> accordingly
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Free reserved slot <*>.
DEBUG org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler: Stopping the checkpoint services with state <*>.
ERROR org.apache.flink.runtime.minicluster.MiniCluster$TerminatingFatalErrorHandler: TaskManager #<*> failed.
DEBUG org.apache.flink.runtime.leaderelection.DefaultLeaderElectionService: Revoke leadership of <*> (<*>@<*>).
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Initiating in memory merge.
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Releasing unused sort-buffer memory.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting the slot manager.
INFO org.apache.flink.runtime.io.disk.BatchShuffleReadBufferPool: Batch shuffle IO buffer pool initialized: numBuffers=<*>, bufferSize=<*>.
INFO org.apache.flink.runtime.io.disk.BatchShuffleReadBufferPool: Batch shuffle IO buffer pool initialized: numBuffers=<*>, bufferSize=<*>.
INFO org.apache.flink.runtime.scheduler.adaptivebatch.DefaultVertexParallelismDecider: The size of broadcast data <*> is larger than the expected maximum value <*> (\'<*>\' * <*>). Use <*> as the size of broadcast data to decide the parallelism.
DEBUG org.apache.flink.runtime.scheduler.adaptivebatch.DefaultVertexParallelismDecider: The size of broadcast data is <*>, the size of non-broadcast data is <*>, the initially decided parallelism is <*>, after normalize is <*>
INFO org.apache.flink.runtime.scheduler.adaptivebatch.DefaultVertexParallelismDecider: The initially normalized parallelism <*> is smaller than the normalized minimum parallelism <*>. Use <*> as the finally decided parallelism.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor$JobLeaderListenerImpl: JobManager for job <*> with leader id <*> lost leadership.
DEBUG org.apache.flink.runtime.scheduler.adaptive.State: Cannot run \'<*>\' because the actual state is <*> and not <*>.
DEBUG org.apache.flink.runtime.util.ZooKeeperUtils: znode <*> has been deleted
DEBUG org.apache.flink.runtime.io.disk.FileChannelManagerImpl: FileChannelManager uses directory <*> for spill files.
DEBUG org.apache.flink.runtime.leaderelection.ZooKeeperMultipleComponentLeaderElectionDriver: Leader information for <*> has changed to <*>.
DEBUG org.apache.flink.runtime.leaderelection.ZooKeeperMultipleComponentLeaderElectionDriver: Leader information for <*> has changed to <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.util.LeaderRetrievalUtils: Trying to select the network interface and address to use by connecting to the leading JobManager.
DEBUG org.apache.flink.runtime.net.ConnectionUtils$LeaderConnectingAddressListener: Retrieved new target address <*> for akka URL <*>.
WARN org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: The setting for \'<*> : <*>\' is invalid. Using default value of <*>
WARN org.apache.flink.runtime.zookeeper.FlinkZooKeeperQuorumPeer: No \'clientPort\' configured. Set to \'<*>\'.
WARN org.apache.flink.runtime.zookeeper.FlinkZooKeeperQuorumPeer: No \'initLimit\' configured. Set to \'<*>\'.
WARN org.apache.flink.runtime.zookeeper.FlinkZooKeeperQuorumPeer: No \'syncLimit\' configured. Set to \'<*>\'.
INFO org.apache.flink.runtime.zookeeper.FlinkZooKeeperQuorumPeer: Set peer and leader port of \'<*>\': \'<*>\' => \'<*>\'.
DEBUG org.apache.flink.runtime.io.disk.FileChannelManagerImpl: FileChannelManager uses directory <*> for spill files.
DEBUG org.apache.flink.runtime.jobmanager.DefaultJobGraphStore: Releasing job graph <*> from <*>.
INFO org.apache.flink.runtime.jobmanager.DefaultJobGraphStore: Released job graph <*> from <*>.
INFO org.apache.flink.runtime.scheduler.adaptive.Executing: New resources are available. Restarting job to scale up.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
WARN org.apache.flink.runtime.state.StateBackendLoader: <*> state backend has been deprecated. Please use \'hashmap\' state backend instead.
DEBUG org.apache.flink.runtime.operators.sort.SorterInputGateway: Large record did not fit into a fresh sort buffer. Putting into large record store.
DEBUG org.apache.flink.runtime.operators.sort.LargeRecordHandler: Initializing the large record spilling...
INFO org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Trying to recover job with job id <*>.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
TRACE org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Checkpoint <*> size: <*>Kb, duration: <*>ms
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Completed checkpoint <*> for job <*> (<*> bytes, checkpointDuration=<*> ms, finalizationTime=<*> ms).
INFO org.apache.flink.runtime.jobmaster.JobMaster: Stopping the JobMaster for job \'<*>\' (<*>).
INFO org.apache.flink.runtime.state.CheckpointStorageLoader: Checkpoint storage is set to \'<*>\'
DEBUG org.apache.flink.runtime.resourcemanager.DefaultJobLeaderIdService: Add job <*> to job leader id monitoring.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.RemoteChannelStateChecker: Ignore a partition producer state notification for task <*>, because it\'s not running.
ERROR org.apache.flink.runtime.util.Hardware: Cannot determine the size of the physical memory for Windows host (using \'wmic memorychip\')
INFO org.apache.flink.runtime.blob.BlobClient: Using ssl connection to the blob server
WARN org.apache.flink.runtime.io.network.netty.CreditBasedPartitionRequestClientHandler: An Exception was thrown during error notification of a remote input channel.
DEBUG org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationHandlerImpl: Stop-with-savepoint transitioned from <*> to <*> on savepoint creation failure handling for job <*>.
WARN org.apache.flink.runtime.dispatcher.Dispatcher: Cleanup didn\'t succeed after job submission failed for job <*>.
ERROR org.apache.flink.runtime.dispatcher.Dispatcher: Failed to submit job <*>.
WARN org.apache.flink.runtime.state.heap.CopyOnWriteStateMap: Maximum capacity of ^ in StateMap reached. Cannot increase hash map size. This can lead to more collisions and lower performance. Please consider scaling-out your job or using a different keyed state backend implementation!
DEBUG org.apache.flink.runtime.leaderelection.ZooKeeperLeaderElectionDriver: Write leader information: <*>.
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.JobScopedResourceTracker: There are <*> excess resources for job <*> after re-assignment.
INFO org.apache.flink.runtime.zookeeper.ZooKeeperStateHandleStore: Removing <*> from ZooKeeper
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is less than its min value <*>, min value will be used instead
TRACE org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Ignore \'<*>\' because the leadership runner is no longer running.
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Preferring <*> (InetAddress.getLocalHost()) for local bind point over previous candidate <*>
WARN org.apache.flink.runtime.blob.BlobWriter: Failed to offload value for job <*> to BLOB store.
ERROR org.apache.flink.runtime.security.SecurityUtils: Unable to install a valid security context factory!
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Close ResourceManager connection <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Terminating registration attempts towards ResourceManager <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor: Connecting to ResourceManager <*>.
INFO org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: Recovering checkpoints from <*>.
INFO org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: Found <*> checkpoints in <*>.
INFO org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: Trying to fetch <*> checkpoints from storage.
INFO org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: Trying to retrieve checkpoint <*>.
INFO org.apache.flink.runtime.util.ZooKeeperUtils: Initialized <*> in \'<*>\' with <*>.
DEBUG org.apache.flink.runtime.operators.sort.SorterInputGateway: Large record did not fit into a fresh sort buffer. Putting into large record store.
DEBUG org.apache.flink.runtime.operators.sort.LargeRecordHandler: Initializing the large record spilling...
TRACE org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Ignore forwarding \'<*>\' because the leadership runner is no longer the valid leader for <*>.
INFO org.apache.flink.runtime.scheduler.DefaultScheduler: Trying to recover from a global failure.
INFO org.apache.flink.runtime.source.coordinator.SourceCoordinator: Marking checkpoint <*> as completed for source <*>.
DEBUG org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcherImpl: Retrieve metric query service gateway for <*>
ERROR org.apache.flink.runtime.entrypoint.ClusterEntrypointUtils: Could not parse command line arguments <*>.
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.JobScopedResourceTracker: There are <*> excess resources for job <*> before re-assignment.
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.JobScopedResourceTracker: There are <*> excess resources for job <*> after re-assignment.
ERROR org.apache.flink.runtime.util.Hardware: Cannot determine the size of the physical memory for Linux host (using \'/proc/meminfo\'). Unexpected format.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannel: <*>: Requesting REMOTE subpartition <*> of partition <*>. <*>
INFO org.apache.flink.runtime.taskmanager.Task: Ignoring checkpoint <*> notification for non-running task <*>.
DEBUG org.apache.flink.runtime.net.ConnectionUtils$LeaderConnectingAddressListener: Retrieved new target address <*> for akka URL <*>.
INFO org.apache.flink.runtime.net.ConnectionUtils$LeaderConnectingAddressListener: Trying to connect to address <*>
WARN org.apache.flink.runtime.net.ConnectionUtils: Could not connect to <*>. Selecting a local address using heuristics.
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Trying to connect to <*> from local address <*> with timeout <*>
DEBUG org.apache.flink.runtime.dispatcher.Dispatcher: Dispatcher is unable to cancel job <*>: not found
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be configured. Will ignore that resource.
DEBUG org.apache.flink.runtime.scheduler.adaptive.WaitingForResources: Initial resource allocation timeout triggered: Creating ExecutionGraph with available resources.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Initializing job \'<*>\' (<*>).
DEBUG org.apache.flink.runtime.operators.resettable.AbstractBlockResettableIterator: Block Resettable Iterator opened.
INFO org.apache.flink.runtime.executiongraph.DefaultExecutionGraph: Job <*> (<*>) switched from state <*> to <*>.
DEBUG org.apache.flink.runtime.jobmaster.DefaultJobMasterServiceProcess: JobMasterService process for job <*> under leader id <*> has been terminated.
INFO org.apache.flink.runtime.blob.BlobServer: Created BLOB server storage directory <*>
WARN org.apache.flink.runtime.blob.BlobServer: Invalid value for maximum connections in BLOB server: <*>. Using default value of <*>
WARN org.apache.flink.runtime.blob.BlobServer: Invalid value for BLOB connection backlog: <*>. Using default value of <*>
DEBUG org.apache.flink.runtime.blob.BlobServer: Received PUT call for BLOB of job <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Freeing inactive slots for job <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Ignoring the freeing of slot <*> because the TaskExecutor is shutting down.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Ignoring the freeing of slot <*> because the TaskExecutor is shutting down.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
DEBUG org.apache.flink.runtime.resourcemanager.DefaultJobLeaderIdService: Add job <*> to job leader id monitoring.
INFO org.apache.flink.runtime.blob.BlobUtils: Found corrupted blob <*> under <*>. Deleting this blob.
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Invalid value for <*>. System will attempt no retries on failed fetch operations of BLOBs.
INFO org.apache.flink.runtime.blob.BlobUtils: Found corrupted blob <*> under <*>. Deleting this blob.
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateCheckpointWriter: complete input, output completed: <*>
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestExecutorImpl: <*> loop terminated
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
DEBUG org.apache.flink.runtime.scheduler.adaptive.CreatingExecutionGraph: Failed to reserve and assign the required slots. Waiting for new resources.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Freeing slot <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotStatusSyncer: Try to free unknown slot <*>.
DEBUG org.apache.flink.runtime.taskexecutor.slot.FileSlotAllocationSnapshotPersistenceService: Successfully written allocation state metadata file <*> for job <*> and allocation <*>.
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*>, seq <*>, <*> @ <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Received an invalid timeout for allocation id <*> with ticket <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: Discarding the results produced by task execution <*>.
WARN org.apache.flink.runtime.io.disk.iomanager.IOManager: IOManager failed to delete temporary file <*>
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
DEBUG org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService: Received confirmation of leadership for a stale leadership grant. Ignoring.
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to cancel task <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
WARN org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> with failure cause: <*>
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException.
DEBUG org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException: <*>
INFO org.apache.flink.runtime.taskmanager.Task: Triggering cancellation of task code <*> (<*>).
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Could not allocate <*> more slots. The number of registered and pending slots is <*>, while the maximum is <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Could not allocate <*> more slots. The number of registered and pending slots is <*>, while the maximum is <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Could not fulfill resource requirements of job <*>. Free slots: <*>
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceTracker: Received notification for job <*> having new resource requirements <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.JobScopedResourceTracker: Detected excess resources for job <*>: <*>
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.JobScopedResourceTracker: There are <*> excess resources for job <*> before re-assignment.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Stopping worker <*>.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Worker <*> with resource spec <*> was requested in current attempt and has not registered. Current pending count after removing: <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Initiating in memory merge.
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Releasing unused sort-buffer memory.
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Shutting <*> down with application status <*>. Diagnostics <*>.
INFO org.apache.flink.runtime.webmonitor.stats.TaskStatsRequestCoordinator: Cancelling request <*>
DEBUG org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService: Received confirmation of leadership for a stale leadership grant. Ignoring.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: No open TaskExecutor connection <*>. Ignoring close TaskExecutor connection. Closing reason was: <*>
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Request a <*>
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Request a <*>
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Request a <*>
DEBUG org.apache.flink.runtime.execution.librarycache.BlobLibraryCacheManager$ResolvedClassLoader: Running class loader shutdown hook: <*>.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: There was no registered job manager for job <*>.
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*> @ <*>
INFO org.apache.flink.runtime.state.heap.HeapRestoreOperation: Starting to restore from state handle: <*>.
DEBUG org.apache.flink.runtime.state.heap.HeapRestoreOperation: Key group <*> doesn\'t belong to this backend with key group range: <*>
DEBUG org.apache.flink.runtime.state.heap.HeapRestoreOperation: Key group <*> doesn\'t belong to this backend with key group range: <*>
INFO org.apache.flink.runtime.state.heap.HeapRestoreOperation: Finished restoring from state handle: <*>.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Job <*> reached terminal state <*>.\n<*>
DEBUG org.apache.flink.runtime.operators.sort.SorterInputGateway: Reading thread done.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate: Fail to get number of queued buffers :
INFO org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Releasing slot [<*>].
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Idle slots have been returned; new total acquired resources: <*>
DEBUG org.apache.flink.runtime.blob.BlobServer: Received PUT call for BLOB of job <*>.
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Trying to connect to <*> from local address <*> with timeout <*>
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Preferring <*> (InetAddress.getLocalHost()) for local bind point over previous candidate <*>
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Allocating <*> task executors for redundancy.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Could not allocate <*> more slots. The number of registered and pending slots is <*>, while the maximum is <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Expect to allocate <*> taskManagers. Actually allocate <*> taskManagers.
INFO org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Recover all persisted job graphs that are not finished, yet.
INFO org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Trying to recover job with job id <*>.
INFO org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Skipping recovery of job with job id <*>, because it already finished in a previous execution
INFO org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Trying to recover job with job id <*>.
INFO org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Trying to recover job with job id <*>.
INFO org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Successfully recovered <*> persisted job graphs.
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Starting <*>.
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Install default filesystem.
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Install security context.
DEBUG org.apache.flink.runtime.security.SecurityUtils: Unable to install security context factory <*>
ERROR org.apache.flink.runtime.security.SecurityUtils: Unable to install a valid security context factory!
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: No open TaskExecutor connection <*>. Ignoring close TaskExecutor connection. Closing reason was: <*>
WARN org.apache.flink.runtime.io.disk.iomanager.IOManager: IOManager failed to delete temporary file <*>
DEBUG org.apache.flink.runtime.leaderelection.DefaultLeaderElectionService: Ignoring the grant leadership notification since the <*> has already been closed.
DEBUG org.apache.flink.runtime.operators.sort.SorterInputGateway: Reading thread done.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Declare new resource requirements for job <*>.<*>\trequired resources: <*><*>\tacquired resources: <*>
DEBUG org.apache.flink.runtime.taskmanager.Task: Release task <*> network resources (state: <*>).
DEBUG org.apache.flink.runtime.io.network.TaskEventDispatcher: unregistering <*>
DEBUG org.apache.flink.runtime.io.network.TaskEventDispatcher: unregistering <*>
INFO org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Releasing slot [<*>].
DEBUG org.apache.flink.runtime.scheduler.adaptive.allocator.SharedSlot: Allocating logical slot from shared slot (<*>)
DEBUG org.apache.flink.runtime.scheduler.adaptive.allocator.SharedSlot: Allocating logical slot from shared slot (<*>)
DEBUG org.apache.flink.runtime.scheduler.adaptive.allocator.SharedSlot: Allocating logical slot from shared slot (<*>)
INFO org.apache.flink.runtime.jobmaster.JobMaster: Error while request key-value state location
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Completed allocation of slot <*> for job <*>.
WARN org.apache.flink.runtime.state.changelog.StateChangelogStorageLoader: Cannot find a factory for changelog storage with name \'<*>\'.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager: Matching resource requirements against available resources.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager: Could not allocate <*>. Max total resource limitation <<*>, <*>> is reached.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager: Could not allocate <*>. Max total resource limitation <<*>, <*>> is reached.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager: Could not allocate <*>. Max total resource limitation <<*>, <*>> is reached.
WARN org.apache.flink.runtime.blob.BlobUtils: File upload for an existing file with key <*> for job <*>. This may indicate a duplicate upload or a hash collision. Ignoring newest upload.
WARN org.apache.flink.runtime.blob.BlobServerConnection: DELETE operation failed for BLOB <*>/<*> from <*>.
DEBUG org.apache.flink.runtime.blob.BlobServerConnection: Socket connection closed
INFO org.apache.flink.runtime.scheduler.adaptivebatch.AdaptiveBatchScheduler: Parallelism of JobVertex: <*> (<*>) is decided to be <*> according to forward group\'s parallelism.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Close ResourceManager connection <*>: <*>
INFO org.apache.flink.runtime.jobmaster.JobMaster: Connecting to ResourceManager <*>
WARN org.apache.flink.runtime.io.network.netty.CreditBasedPartitionRequestClientHandler: An Exception was thrown during error notification of a remote input channel.
WARN org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase: Unexpected null keyed state handle of materialized part when deserializing changelog state-backend handle
WARN org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase: Unexpected null keyed state handle of materialized part when deserializing changelog state-backend handle
WARN org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase: Unexpected null keyed state handle of materialized part when deserializing changelog state-backend handle
WARN org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase: Unexpected null keyed state handle of materialized part when deserializing changelog state-backend handle
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived JVM Overhead size (<*>) does not match the configured or default JVM Overhead fraction (<*>) from the configured Total Process Memory size (<*>). The derived JVM OVerhead size will be used.
INFO org.apache.flink.runtime.state.StateBackendLoader: Using job/cluster config to configure application-defined state backend: <*>
ERROR org.apache.flink.runtime.resourcemanager.ResourceManager: Fatal error occurred in ResourceManager.
<INIT> org.apache.flink.runtime.taskmanager.MemoryLogger: Memory Logger
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Ignoring the freeing of slot <*> because the TaskExecutor is shutting down.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager: Releasing local state under allocation id <*>.
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be positive while finding <*>. Will ignore that resource.
INFO org.apache.flink.runtime.externalresource.ExternalResourceUtils: Enabled external resources: <*>
INFO org.apache.flink.runtime.externalresource.ExternalResourceUtils: Add external resources driver for <*>.
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: Could not found legal amount configuration for <*>.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Stopping dispatcher <*>.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Stopping all currently running jobs of dispatcher <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultAllocatedSlotPool: Reserve free slot with allocation id <*>.
DEBUG org.apache.flink.runtime.scheduler.KvStateHandler: Key value state unregistered for job <*> under name <*>.
INFO org.apache.flink.runtime.util.config.memory.jobmanager.JobManagerFlinkMemoryUtils: The Off-Heap Memory size (<*>) is derived the configured Total Flink Memory size (<*>) minus the configured JVM Heap Memory size (<*>). The default Off-Heap Memory size (<*>) is ignored.
WARN org.apache.flink.runtime.util.config.memory.jobmanager.JobManagerFlinkMemoryUtils: The configured or derived JVM heap memory size (<*>) is less than its recommended minimum value (<*>)
DEBUG org.apache.flink.runtime.operators.AllGroupCombineDriver: AllGroupCombine starting.
INFO org.apache.flink.runtime.io.network.partition.SortMergeResultPartition: New partitioned file produced: <*>.
WARN org.apache.flink.runtime.rest.handler.job.metrics.AbstractAggregatingMetricsHandler: Could not retrieve metrics.
INFO org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration: Ignoring old (but still present) network buffer configuration via <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.state.filesystem.FsCheckpointMetadataOutputStream: Cannot create recoverable writer due to <*>, will use the ordinary writer.
INFO org.apache.flink.runtime.jobmaster.JobMaster: Starting execution of job \'<*>\' (<*>) under job master id <*>.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
WARN org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger or complete checkpoint <*> for job <*>. (<*> consecutive failed attempts so far)
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
WARN org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger or complete checkpoint <*> for job <*>. (<*> consecutive failed attempts so far)
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
DEBUG org.apache.flink.runtime.memory.MemoryManager: Initialized MemoryManager with total memory size <*> and page size <*>.
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Could not delete the staging file <*> for blob key <*> and job <*>.
WARN org.apache.flink.runtime.blob.TransientBlobCache: Failed to delete locally cached BLOB <*> at <*>
WARN org.apache.flink.runtime.blob.TransientBlobCache: Failed to delete locally cached BLOB <*> at <*>
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Could not delete the staging file <*> for blob key <*> and job <*>.
WARN org.apache.flink.runtime.blob.BlobCacheSizeTracker: Attempt to track a duplicated BLOB. This may indicate a duplicate upload or a hash collision. Ignoring newest upload. JobID = [<*>], BlobKey = [<*>]
WARN org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: The setting for \'<*> : <*>\' is invalid. Using default value of <*>
INFO org.apache.flink.runtime.scheduler.DefaultScheduler: Using failover strategy <*> for <*> (<*>).
DEBUG org.apache.flink.runtime.io.network.partition.consumer.RemoteChannelStateChecker: Ignore a partition producer state notification for task <*>, because it\'s not running.
DEBUG org.apache.flink.runtime.scheduler.KvStateHandler: Key value state unregistered for job <*> under name <*>.
WARN org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: The setting for \'<*> : <*>\' is invalid. Using default value of <*>
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultAllocatedSlotPool: Reserve free slot with allocation id <*>.
ERROR org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Fatal error occurred in the cluster entrypoint.
ERROR org.apache.flink.runtime.io.network.netty.PartitionRequestQueue: Encountered error while consuming partitions
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.source.coordinator.SourceCoordinator: Marking checkpoint <*> as aborted for source <*>.
DEBUG org.apache.flink.runtime.execution.librarycache.BlobLibraryCacheManager$ResolvedClassLoader: Running class loader shutdown hook: <*>.
DEBUG org.apache.flink.runtime.jobmaster.DefaultJobMasterServiceProcess: Terminating the JobMasterService process for job <*> under leader id <*>.
DEBUG org.apache.flink.runtime.util.ZooKeeperUtils: znode <*> has been deleted
DEBUG org.apache.flink.runtime.io.network.partition.ResourceManagerPartitionTrackerImpl: Processing shutdown of task executor <*>.
DEBUG org.apache.flink.runtime.jobmaster.JobMaster$1: Canceling left-over deployments <*> on task executor <*>.
INFO org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Received resource requirements from job <*>: <*>
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcherImpl: Requesting paths for query services failed.
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*> @ <*>
TRACERECOVER org.apache.flink.runtime.io.network.partition.PipelinedSubpartition: PipelinedSubpartition#addRecovered
DEBUG org.apache.flink.runtime.metrics.ReporterSetup: Found reporter factory <*> at <*> 
LOGCOMPLETEDINTERNAL org.apache.flink.runtime.state.SnapshotStrategyRunner: <*> (<*>, synchronous part) in thread <*> took <*> ms.
DEBUG org.apache.flink.runtime.scheduler.SharedSlot: Allocated <*>
INFO org.apache.flink.runtime.metrics.MetricRegistryImpl: No metrics reporter configured, no metrics will be exposed/reported.
WARN org.apache.flink.runtime.state.filesystem.FsStateBackend: Ignoring invalid file size threshold value (<*>): <*> - using default value <*> instead.
DEBUG org.apache.flink.runtime.execution.librarycache.BlobLibraryCacheManager$ResolvedClassLoader: Running class loader shutdown hook: <*>.
INFO org.apache.flink.runtime.io.network.partition.SortMergeResultPartition: New partitioned file produced: <*>.
INFO org.apache.flink.runtime.taskexecutor.DefaultJobLeaderService: Cannot reconnect to job <*> because it is not registered.
INFO org.apache.flink.runtime.jobmaster.JobMaster: JobManager successfully registered at ResourceManager, leader id: <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived JVM Overhead size (<*>) does not match the configured or default JVM Overhead fraction (<*>) from the configured Total Process Memory size (<*>). The derived JVM OVerhead size will be used.
INFO org.apache.flink.runtime.state.heap.HeapKeyedStateBackendBuilder: Finished to build heap keyed state-backend.
INFO org.apache.flink.runtime.state.heap.HeapKeyedStateBackend: Initializing heap keyed state backend with stream factory.
DEBUG org.apache.flink.runtime.scheduler.SchedulerBase: Archive global failure.
INFO org.apache.flink.runtime.taskexecutor.KvStateService: Shutting down the kvState service and its components.
DEBUG org.apache.flink.runtime.taskexecutor.KvStateService: Shutting down Queryable State Client Proxy.
INFO org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService: Received confirmation of leadership for leader <*> , session=<*>
DEBUG org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunner: Ignoring action because <*> has already been stopped.
INFO org.apache.flink.runtime.state.filesystem.FsCheckpointMetadataOutputStream: Cannot create recoverable writer due to <*>, will use the ordinary writer.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be positive while finding <*>. Will ignore that resource.
INFO org.apache.flink.runtime.checkpoint.Checkpoints: Attempting to load configured state backend for savepoint disposal
WARN org.apache.flink.runtime.state.StateBackendLoader: <*> state backend has been deprecated. Please use \'hashmap\' state backend instead.
INFO org.apache.flink.runtime.state.StateBackendLoader: State backend is set to heap memory <*>
DEBUG org.apache.flink.runtime.checkpoint.Checkpoints: No state backend configured, attempting to dispose savepoint with configured checkpoint storage
INFO org.apache.flink.runtime.checkpoint.Checkpoints: Attempting to load configured checkpoint storage for savepoint disposal
INFO org.apache.flink.runtime.state.CheckpointStorageLoader: Using application defined checkpoint storage: <*>
INFO org.apache.flink.runtime.blob.BlobClient: Using ssl connection to the blob server
TRACE org.apache.flink.runtime.leaderelection.DefaultLeaderElectionService: Leader node changed while <*> is the leader with session ID <*>. New leader information <*>.
DEBUG org.apache.flink.runtime.leaderelection.DefaultLeaderElectionService: Writing leader information by <*> since the external storage is empty.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting the slot manager.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate: Fail to get size of queued buffers :
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate: Fail to get size of queued buffers :
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateCheckpointWriter: channel state write completed, checkpointId: <*>, handles: <*>
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateCheckpointWriter: channel state write completed, checkpointId: <*>, handles: <*>
WARN org.apache.flink.runtime.io.network.netty.PartitionRequestClientFactory: Failed to connect to <*>. Giving up.
WARN org.apache.flink.runtime.io.network.netty.PartitionRequestClientFactory: Failed to connect to <*>. Giving up.
WARN org.apache.flink.runtime.io.network.netty.PartitionRequestClientFactory: Failed to connect to <*>. Giving up.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker: A slot was added with an already tracked slot ID <*>. Removing previous entry.
TRACE org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker$MultiSlotStatusUpdateListener: Slot <*> transitioned from <*> to <*> for job <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Ignoring checkpoint <*> notification for non-running task <*>.
ERROR org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Fatal error occurred in the cluster entrypoint.
INFO org.apache.flink.runtime.state.heap.HeapKeyedStateBackendBuilder: Finished to build heap keyed state-backend.
INFO org.apache.flink.runtime.state.heap.HeapKeyedStateBackend: Initializing heap keyed state backend with stream factory.
DEBUG org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunner: Ignoring action because <*> has already been stopped.
ERROR org.apache.flink.runtime.source.coordinator.SourceCoordinatorProvider$CoordinatorExecutorThreadFactory: Thread \'<*>\' produced an uncaught exception. Failing the job.
TRACE org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Ignore \'<*>\' because the leadership runner is no longer running.
DEBUG org.apache.flink.runtime.jobmaster.DefaultJobMasterServiceProcess: Job <*> under leader id <*> reached a globally terminal state <*>.
ERROR org.apache.flink.runtime.taskexecutor.TaskExecutor: Fatal error occurred in TaskExecutor <*>.
INFO org.apache.flink.runtime.scheduler.adaptive.StateWithExecutionGraph: Triggering a checkpoint for job <*>.
INFO org.apache.flink.runtime.resourcemanager.ResourceManager: Disconnect job manager <*>@<*> for job <*> from the resource manager.
DEBUG org.apache.flink.runtime.dispatcher.Dispatcher: Cleanup for the job \'<*>\' has finished. Job has been marked as clean.
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Sorting large records, to add them to in-memory merge.
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Spilling done.
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Releasing sort-buffer memory.
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Performing merge of <*> sorted streams.
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Performing merge of <*> sorted streams.
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Performing merge of <*> sorted streams.
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Spilling and merging thread done.
INFO org.apache.flink.runtime.jobmaster.JobMaster: JobManager successfully registered at ResourceManager, leader id: <*>.
ERROR org.apache.flink.runtime.executiongraph.DefaultExecutionGraph: Couldn\'t create ArchivedExecutionConfig for job <*> 
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.io.network.netty.NettyClient: Successful shutdown (took <*> ms).
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Requested thread dump from unregistered TaskExecutor <*>.
DEBUG org.apache.flink.runtime.jobmaster.DefaultJobMasterServiceProcess: JobMasterService process for job <*> under leader id <*> has been terminated.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartition: <*>: Received release notification for subpartition <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Slot allocation for slot <*> for job <*> failed.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.scheduler.SchedulerBase: Archive global failure.
TRACE org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Ignore forwarding \'<*>\' because the leadership runner is no longer the valid leader for <*>.
TRACE org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Ignore forwarding \'<*>\' because the leadership runner is no longer the valid leader for <*>.
<INIT> org.apache.flink.runtime.rest.handler.job.checkpoints.CheckpointingStatisticsHandler: Checkpointing has not been enabled.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGateFactory: <*>: Created <*> input channels (<*>).
DEBUG org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcherImpl: Start fetching metrics.
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartitionManager: Requesting subpartition <*> of <*>.
INFO org.apache.flink.runtime.io.network.buffer.NetworkBufferPool: Allocated <*> MB for network buffer pool (number of memory segments: <*>, bytes per segment: <*>).
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.blob.BlobUtils: Found corrupted blob <*> under <*>. Deleting this blob.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager: Releasing local state under allocation id <*>.
DEBUG org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationHandlerImpl: Stop-with-savepoint transitioned from <*> to <*> on execution termination handling with all executions being finished for job <*>.
DEBUG org.apache.flink.runtime.io.disk.FileChannelManagerImpl: FileChannelManager uses directory <*> for spill files.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Received file upload request for file <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: The file <*> is unavailable on the TaskExecutor <*>.
INFO org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationManager: Trying to cancel job <*> with savepoint, but no savepoint directory configured.
INFO org.apache.flink.runtime.scheduler.SchedulerBase: Triggering <*>savepoint for job <*>.
DEBUG org.apache.flink.runtime.scheduler.adaptive.State: Cannot run \'<*>\' because the actual state is <*> and not <*>.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: No open TaskExecutor connection <*>. Ignoring close TaskExecutor connection. Closing reason was: <*>
ERROR org.apache.flink.runtime.rest.handler.AbstractHandler: Unhandled exception.
DEBUG org.apache.flink.runtime.leaderelection.ZooKeeperMultipleComponentLeaderElectionDriver: Leader information for <*> has changed to <*>.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Job <*> reached terminal state <*>.\n<*>
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Worker <*> is registered.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Worker <*> with resource spec <*> was requested in current attempt. Current pending count after registering: <*>.
DEBUG org.apache.flink.runtime.scheduler.ExecutionGraphHandler: Can not find Execution for attempt <*>.
DEBUG org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcherImpl: Fetching of JobDetails failed.
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Decline checkpoint <*> by task <*> of job <*> at <*>.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
WARN org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger or complete checkpoint <*> for job <*>. (<*> consecutive failed attempts so far)
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
DEBUG org.apache.flink.runtime.operators.sort.CombiningSpillingBehaviour: Combining buffer <*>.
DEBUG org.apache.flink.runtime.operators.sort.CombiningSpillingBehaviour: Combined and spilled buffer <*>.
INFO org.apache.flink.runtime.resourcemanager.ResourceManagerServiceImpl: Starting resource manager service.
DEBUG org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Create new JobMasterServiceProcess because we were granted leadership under <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
INFO org.apache.flink.runtime.executiongraph.Execution: Discarding the results produced by task execution <*>.
DEBUG org.apache.flink.runtime.leaderretrieval.ZooKeeperLeaderRetrievalDriver: Leader node has changed.
DEBUG org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable: Closing InPlaceMutableHashTable and releasing resources.
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*> @ <*>
TRACERECOVER org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel: InputChannelRecoveredStateHandler#recover
DEBUG org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel: <*>/<*> finished recovering input.
INFO org.apache.flink.runtime.resourcemanager.ResourceManager: Closing TaskExecutor connection <*> because: <*>
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerTracker: Add task manager <*> with total resource <*> and default slot resource <*>.
INFO org.apache.flink.runtime.taskexecutor.DefaultJobLeaderService: Remove job <*> from job leader monitoring.
WARN org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationHandlerImpl: Inconsistent execution state after stopping with savepoint. At least one execution is still in one of the following states: <*>.
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Free slot with allocation id <*> because: <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Releasing job resources for job <*>.
DEBUG org.apache.flink.runtime.state.TaskExecutorStateChangelogStoragesManager: Releasing state changelog storage under job id <*>.
DEBUG org.apache.flink.runtime.rest.handler.taskmanager.AbstractTaskManagerFileHandler: Load file from TaskManager <*>.
DEBUG org.apache.flink.runtime.io.network.partition.PipelinedSubpartition: <*>: Finished <*>.
DEBUG org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable: Closing InPlaceMutableHashTable and releasing resources.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils: The configuration option <*> required for local execution is not set, setting it to <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Tried allocating slot <*> for job <*>, but it was already allocated for job <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Could not allocate <*> more slots. The number of registered and pending slots is <*>, while the maximum is <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Could not allocate <*> more slots. The number of registered and pending slots is <*>, while the maximum is <*>.
WARN org.apache.flink.runtime.leaderelection.ZooKeeperMultipleComponentLeaderElectionDriver: Connection to ZooKeeper lost. The contender no longer participates in the leader election.
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*> @ <*>
TRACERECOVER org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel: InputChannelRecoveredStateHandler#recover
DEBUG org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel: <*>/<*> finished recovering input.
DEBUG org.apache.flink.runtime.heartbeat.HeartbeatManagerImpl: Received heartbeat request from <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived JVM Overhead size (<*>) does not match the configured or default JVM Overhead fraction (<*>) from the configured Total Process Memory size (<*>). The derived JVM OVerhead size will be used.
ERROR org.apache.flink.runtime.minicluster.MiniCluster$TerminatingFatalErrorHandler: TaskManager #<*> failed.
DEBUG org.apache.flink.runtime.operators.sort.SorterInputGateway: Reading thread done.
WARN org.apache.flink.runtime.taskmanager.Task: Task \'<*>\' did not react to cancelling signal - <*>; it is stuck for <*> seconds in method:\n <*>
INFO org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestExecutorImpl: <*> discarding <*> drained requests
INFO org.apache.flink.runtime.scheduler.DefaultScheduler: Trying to recover from a global failure.
INFO org.apache.flink.runtime.metrics.dump.MetricQueryService: <*> will not be reported as the metric dump would exceed the maximum size of <*> bytes.
LOGDUMPSIZEWOULDEXCEEDLIMIT org.apache.flink.runtime.metrics.dump.MetricQueryService: Counters
INFO org.apache.flink.runtime.metrics.dump.MetricQueryService: <*> will not be reported as the metric dump would exceed the maximum size of <*> bytes.
LOGDUMPSIZEWOULDEXCEEDLIMIT org.apache.flink.runtime.metrics.dump.MetricQueryService: Meters
INFO org.apache.flink.runtime.metrics.dump.MetricQueryService: <*> will not be reported as the metric dump would exceed the maximum size of <*> bytes.
LOGDUMPSIZEWOULDEXCEEDLIMIT org.apache.flink.runtime.metrics.dump.MetricQueryService: Gauges
INFO org.apache.flink.runtime.metrics.dump.MetricQueryService: <*> will not be reported as the metric dump would exceed the maximum size of <*> bytes.
LOGDUMPSIZEWOULDEXCEEDLIMIT org.apache.flink.runtime.metrics.dump.MetricQueryService: Histograms
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
DEBUG org.apache.flink.runtime.taskmanager.Task: Creating FileSystem stream leak safety net for task <*>
INFO org.apache.flink.runtime.taskmanager.Task: Loading JAR files for task <*>.
DEBUG org.apache.flink.runtime.taskmanager.Task: Getting user code class loader for task <*> at library cache manager took <*> milliseconds
DEBUG org.apache.flink.runtime.taskmanager.Task: Registering task at network: <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Obtaining local cache file for \'<*>\'.
WARN org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> with failure cause: <*>
INFO org.apache.flink.runtime.taskmanager.Task: Freeing task resources for <*> (<*>).
DEBUG org.apache.flink.runtime.taskmanager.Task: Release task <*> network resources (state: <*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException.
DEBUG org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException: <*>
INFO org.apache.flink.runtime.taskmanager.Task: Freeing task resources for <*> (<*>).
DEBUG org.apache.flink.runtime.taskmanager.Task: Release task <*> network resources (state: <*>).
DEBUG org.apache.flink.runtime.taskmanager.Task: Ensuring all FileSystem streams are closed for task <*>
WARN org.apache.flink.runtime.blob.BlobWriter: Failed to offload value for job <*> to BLOB store.
INFO org.apache.flink.runtime.executiongraph.DefaultExecutionGraphBuilder: Running initialization on master for job <*> (<*>).
INFO org.apache.flink.runtime.executiongraph.DefaultExecutionGraphBuilder: Successfully ran initialization on master in <*> ms.
DEBUG org.apache.flink.runtime.executiongraph.DefaultExecutionGraphBuilder: Adding <*> vertices from job graph <*> (<*>).
DEBUG org.apache.flink.runtime.executiongraph.DefaultExecutionGraph: Attaching <*> topologically sorted vertices to existing job graph with <*> vertices and <*> intermediate results.
INFO org.apache.flink.runtime.scheduler.adapter.DefaultExecutionTopology: Built <*> new pipelined regions in <*> ms, total <*> pipelined regions currently.
DEBUG org.apache.flink.runtime.executiongraph.DefaultExecutionGraphBuilder: Successfully created execution graph from job graph <*> (<*>).
INFO org.apache.flink.runtime.state.StateBackendLoader: Loading state backend via factory <*>
INFO org.apache.flink.runtime.state.StateBackendLoader: No state backend has been configured, using default (HashMap) <*>
INFO org.apache.flink.runtime.state.StateBackendLoader: State backend loader loads the state backend as <*>
INFO org.apache.flink.runtime.state.CheckpointStorageLoader: Using application defined checkpoint storage: <*>
DEBUG org.apache.flink.runtime.io.disk.iomanager.IOManagerAsync: Shutting down I/O manager.
INFO org.apache.flink.runtime.taskexecutor.TaskExecutorToResourceManagerConnection: Successful registration at resource manager <*> under registration id <*>.
WARN org.apache.flink.runtime.state.heap.CopyOnWriteStateMap: Maximum capacity of ^ in StateMap reached. Cannot increase hash map size. This can lead to more collisions and lower performance. Please consider scaling-out your job or using a different keyed state backend implementation!
TRACE org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner: Ignore result future forwarding because the leader <*> is no longer valid.
INFO org.apache.flink.runtime.scheduler.DefaultSchedulerFactory: Using restart back off time strategy <*> for <*> (<*>).
WARN org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils: The setting for \'<*> : <*>\' is invalid. Using default value of <*>
INFO org.apache.flink.runtime.checkpoint.Checkpoints: Attempting to load configured state backend for savepoint disposal
INFO org.apache.flink.runtime.state.StateBackendLoader: State backend is set to heap memory <*>
INFO org.apache.flink.runtime.checkpoint.Checkpoints: Attempting to load configured checkpoint storage for savepoint disposal
INFO org.apache.flink.runtime.state.CheckpointStorageLoader: Using job/cluster config to configure application-defined checkpoint storage: <*>
WARN org.apache.flink.runtime.state.CheckpointStorageLoader: Config option \'<*>\' is ignored because the checkpoint storage passed via StreamExecutionEnvironment takes precedence.
DEBUG org.apache.flink.runtime.io.network.buffer.LocalBufferPool: Using a local buffer pool with <*>-<*> buffers
DEBUG org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler: Offering scale up to scale up controller with currentCumulativeParallelism=<*>, newCumulativeParallelism=<*>
INFO org.apache.flink.runtime.util.LeaderRetrievalUtils: Trying to select the network interface and address to use by connecting to the leading JobManager.
INFO org.apache.flink.runtime.net.ConnectionUtils$LeaderConnectingAddressListener: Trying to connect to address <*>
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Trying to connect to <*> from local address <*> with timeout <*>
WARN org.apache.flink.runtime.net.ConnectionUtils: Could not find any IPv address that is not loopback or link-local. Using localhost address.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Release TaskExecutor <*> because it exceeded the idle timeout.
DEBUG org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunner: Ignoring action because <*> has already been stopped.
WARN org.apache.flink.runtime.state.filesystem.FsStateBackend: Ignoring invalid file size threshold value (<*>): <*> - using default value <*> instead.
DEBUG org.apache.flink.runtime.scheduler.DefaultScheduler: Refusing to deploy execution vertex <*> because this deployment was superseded by another deployment
DEBUG org.apache.flink.runtime.scheduler.SlotSharingExecutionSlotAllocator: There is no SharedSlot for ExecutionSlotSharingGroup of ExecutionVertexID <*>
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Install default filesystem.
INFO org.apache.flink.runtime.io.network.netty.NettyClient: Successful shutdown (took <*> ms).
INFO org.apache.flink.runtime.leaderelection.DefaultMultipleComponentLeaderElectionService: Closing <*>.
INFO org.apache.flink.runtime.state.StateBackendLoader: State backend is set to heap memory <*>
INFO org.apache.flink.runtime.scheduler.adapter.DefaultExecutionTopology: Built <*> new pipelined regions in <*> ms, total <*> pipelined regions currently.
DEBUG org.apache.flink.runtime.operators.resettable.AbstractBlockResettableIterator: Block Resettable Iterator opened.
DEBUG org.apache.flink.runtime.executiongraph.Execution: The execution has no slot assigned. This indicates that the execution is no longer running.
INFO org.apache.flink.runtime.executiongraph.Execution: <*> (<*>) switched from <*> to <*> on <*>.
DEBUG org.apache.flink.runtime.jobmaster.JobMaster: Rejecting TaskManager registration attempt because of wrong job id <*>.
DEBUG org.apache.flink.runtime.rest.handler.taskmanager.AbstractTaskManagerFileHandler: Remove cached file for TaskExecutor <*>.
TRACE org.apache.flink.runtime.io.network.logger.NetworkActionsLogger: [<*>] <*> <*>, seq <*>, <*> @ <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: Received file upload request for file <*>
DEBUG org.apache.flink.runtime.taskexecutor.TaskExecutor: The file <*> is unavailable on the TaskExecutor <*>.
DEBUG org.apache.flink.runtime.operators.hash.CompactingHashTable: Cancelling hash table operations.
ERROR org.apache.flink.runtime.util.Hardware: Cannot determine the size of the physical memory for FreeBSD host (using \'sysctl hw.physmem\').
ERROR org.apache.flink.runtime.util.Hardware: Cannot determine the size of the physical memory for FreeBSD host (using \'sysctl hw.physmem\')
INFO org.apache.flink.runtime.util.EnvironmentInformation:  JVM Options: (none)
INFO org.apache.flink.runtime.util.EnvironmentInformation:  Program Arguments:
ERROR org.apache.flink.runtime.entrypoint.ClusterEntrypointUtils: Could not parse command line arguments <*>.
ERROR org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Reactive mode is configured for an unsupported cluster type. At the moment, reactive mode is only supported by standalone application clusters (bin/standalone-job.sh).
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Starting <*>.
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Install default filesystem.
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Install security context.
ERROR org.apache.flink.runtime.security.SecurityUtils: Unable to install a valid security context factory!
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Terminating cluster entrypoint process <*> with exit code <*>.
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateWriterImpl: <*> finishing input data, checkpoint <*>
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Starting <*>.
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Install default filesystem.
INFO org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Install security context.
DEBUG org.apache.flink.runtime.security.SecurityUtils: Unable to install security context factory <*>
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
DEBUG org.apache.flink.runtime.rest.RestClient: Sending request of class <*> to <*>:<*><*>
TRACE org.apache.flink.runtime.rest.RestClient: Adding file <*> to request.
WARN org.apache.flink.runtime.util.config.memory.jobmanager.JobManagerFlinkMemoryUtils: The configured or derived JVM heap memory size (<*>) is less than its recommended minimum value (<*>)
DEBUG org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcherImpl: Fetching of JobDetails failed.
ERROR org.apache.flink.runtime.security.modules.HadoopModuleFactory: Cannot create Hadoop Security Module.
INFO org.apache.flink.runtime.taskexecutor.slot.TaskSlotTableImpl: Free slot <*>.
INFO org.apache.flink.runtime.scheduler.adaptive.Executing: New resources are available. Restarting job to scale up.
DEBUG org.apache.flink.runtime.rest.handler.taskmanager.AbstractTaskManagerFileHandler: Could not connect to ResourceManager right now.
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateWriterImpl: <*> finishing input data, checkpoint <*>
DEBUG org.apache.flink.runtime.executiongraph.Execution: The execution has no slot assigned. This indicates that the execution is no longer running.
ERROR org.apache.flink.runtime.util.Hardware: Cannot determine physical memory of machine for MacOS host
INFO org.apache.flink.runtime.source.coordinator.SourceCoordinator: Distributing maxAllowedWatermark=<*> to subTaskIds=<*>
WARN org.apache.flink.runtime.util.config.memory.jobmanager.JobManagerFlinkMemoryUtils: The configured or derived JVM heap memory size (<*>) is less than its recommended minimum value (<*>)
INFO org.apache.flink.runtime.resourcemanager.ResourceManager: Disconnect job manager <*>@<*> for job <*> from the resource manager.
WARN org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase: Unexpected null keyed state handle of materialized part when deserializing changelog state-backend handle
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge: Release slot with slot request id <*>
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge: Could not find slot which has fulfilled slot request <*>. Ignoring the release operation.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge: Release slot with slot request id <*>
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge: Release slot with slot request id <*>
WARN org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration: Config key <*> is deprecated; use <*> instead.
INFO org.apache.flink.runtime.source.coordinator.SourceCoordinator: Recovering subtask <*> to checkpoint <*> for source <*> to checkpoint.
DEBUG org.apache.flink.runtime.source.coordinator.SourceCoordinator: Adding splits back to the split enumerator of source <*>: <*>
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is greater than its max value <*>, max value will be used instead
DEBUG org.apache.flink.runtime.scheduler.adaptive.allocator.SharedSlot: Allocating logical slot from shared slot (<*>)
CLEARPROPERTY org.apache.flink.runtime.security.modules.JaasModule: java.security.auth.login.config
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Release TaskExecutor <*> because it exceeded the idle timeout.
DEBUG org.apache.flink.runtime.checkpoint.channel.ChannelStateWriterImpl: <*> starting checkpoint <*> (<*>)
INFO org.apache.flink.runtime.source.coordinator.SourceCoordinator: Distributing maxAllowedWatermark=<*> to subTaskIds=<*>
DEBUG org.apache.flink.runtime.scheduler.ExecutionGraphHandler: No more input splits available
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Initiating in memory merge.
DEBUG org.apache.flink.runtime.operators.sort.SpillingThread: Releasing unused sort-buffer memory.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Stopping worker <*>.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Worker <*> with resource spec <*> was requested in current attempt and has not registered. Current pending count after removing: <*>.
DEBUG org.apache.flink.runtime.metrics.util.MetricUtils: More than one memory pool named \'Metaspace\' is present. Only the first pool was used for instantiating the \'<*>\' metrics.
INFO org.apache.flink.runtime.state.StateBackendLoader: State backend is set to heap memory <*>
INFO org.apache.flink.runtime.state.StateBackendLoader: No state backend has been configured, using default (HashMap) <*>
DEBUG org.apache.flink.runtime.metrics.util.MetricUtils: More than one memory pool named \'Metaspace\' is present. Only the first pool was used for instantiating the \'<*>\' metrics.
INFO org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils: The derived Network Memory size (<*>) does not match the configured Network Memory fraction (<*>) from the configured Total Flink Memory size (<*>). The derived Network Memory size will be used.
WARN org.apache.flink.runtime.resourcemanager.StandaloneResourceManagerFactory: Config option <*> will be ignored in standalone mode.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration: Config key <*> is deprecated; use <*> instead.
INFO org.apache.flink.runtime.dispatcher.Dispatcher: Job <*> reached terminal state <*>.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
INFO org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger checkpoint for job <*> since <*>.
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
INFO org.apache.flink.runtime.taskexecutor.TaskExecutor$JobLeaderListenerImpl: JobManager for job <*> with leader id <*> lost leadership.
INFO org.apache.flink.runtime.executiongraph.Execution: Discarding the results produced by task execution <*>.
ERROR org.apache.flink.runtime.taskexecutor.TaskExecutor: Cannot find task with ID <*> to unregister.
TRACE org.apache.flink.runtime.checkpoint.channel.ChannelStateWriterImpl: <*> adding output data, checkpoint <*>, channel: <*>, startSeqNum: <*>, num buffers: <*>
DEBUG org.apache.flink.runtime.jobmaster.DefaultJobMasterServiceProcess: Successfully created the JobMasterService for job <*> under leader id <*>.
INFO org.apache.flink.runtime.checkpoint.ZooKeeperCheckpointIDCounter: Shutting down.
INFO org.apache.flink.runtime.blob.BlobClient: Using ssl connection to the blob server
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
INFO org.apache.flink.runtime.util.ZooKeeperUtils: Enforcing creator for ZK connections
INFO org.apache.flink.runtime.util.ZooKeeperUtils: Using \'<*>\' as Zookeeper namespace.
INFO org.apache.flink.runtime.state.heap.HeapRestoreOperation: Starting to restore from state handle: <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
WARN org.apache.flink.runtime.state.heap.CopyOnWriteStateMap: Maximum capacity of ^ in StateMap reached. Cannot increase hash map size. This can lead to more collisions and lower performance. Please consider scaling-out your job or using a different keyed state backend implementation!
DEBUG org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationHandlerImpl: Stop-with-savepoint transitioned from <*> to <*> on savepoint creation handling for job <*>.
ERROR org.apache.flink.runtime.util.Hardware: Cannot determine size of physical memory for unknown operating system
WARN org.apache.flink.runtime.dispatcher.runner.JobDispatcherLeaderProcessFactoryFactory: Unexpected dirty JobResultStore entry: Job \'<*>\' is listed as dirty, isn\'t part of this single-job cluster, though.
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Upload directory <*> does not exist. 
INFO org.apache.flink.runtime.rest.RestServerEndpoint: Created directory <*> for file uploads.
WARN org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Worker <*> did not register in <*>, will stop it and request a new one if needed.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Stopping worker <*>.
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Worker <*> with resource spec <*> was requested in current attempt and has not registered. Current pending count after removing: <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is less than its min value <*>, min value will be used instead
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Requesting new worker with resource spec <*>, current pending count: <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is less than its min value <*>, min value will be used instead
INFO org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager: Requesting new worker with resource spec <*>, current pending count: <*>.
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
DEBUG org.apache.flink.runtime.blob.BlobClient: PUT BLOB stream to <*>.
INFO org.apache.flink.runtime.util.LeaderRetrievalUtils: Trying to select the network interface and address to use by connecting to the leading JobManager.
INFO org.apache.flink.runtime.net.ConnectionUtils$LeaderConnectingAddressListener: Trying to connect to address <*>
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Choosing InetAddress.getLocalHost() address as a heuristic.
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Target address <*> and local address <*> share prefix - trying to connect.
DEBUG org.apache.flink.runtime.net.ConnectionUtils: Trying to connect to <*> from local address <*> with timeout <*>
INFO org.apache.flink.runtime.taskexecutor.TaskManagerRunner: TaskManager will use hostname/address \'<*>\' (<*>) for communication.
DEBUG org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool: Declare new resource requirements for job <*>.<*>\trequired resources: <*><*>\tacquired resources: <*>
INFO org.apache.flink.runtime.leaderelection.DefaultLeaderElectionService: Stopping DefaultLeaderElectionService.
INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Triggering checkpoint <*> (type=<*>) @ <*> for job <*>.
DEBUG org.apache.flink.runtime.scheduler.SchedulerBase: Archive global failure.
WARN org.apache.flink.runtime.blob.BlobUtils: File upload for an existing file with key <*> for job <*>. This may indicate a duplicate upload or a hash collision. Ignoring newest upload.
WARN org.apache.flink.runtime.blob.AbstractBlobCache: Could not delete the staging file <*> for blob key <*> and job <*>.
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException.
DEBUG org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException: <*>
WARN org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> with failure cause: <*>
DEBUG org.apache.flink.runtime.taskmanager.Task: Creating FileSystem stream leak safety net for task <*>
INFO org.apache.flink.runtime.taskmanager.Task: Loading JAR files for task <*>.
DEBUG org.apache.flink.runtime.taskmanager.Task: Getting user code class loader for task <*> at library cache manager took <*> milliseconds
DEBUG org.apache.flink.runtime.taskmanager.Task: Registering task at network: <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Obtaining local cache file for \'<*>\'.
INFO org.apache.flink.runtime.taskmanager.Task: Freeing task resources for <*> (<*>).
DEBUG org.apache.flink.runtime.taskmanager.Task: Release task <*> network resources (state: <*>).
DEBUG org.apache.flink.runtime.io.network.TaskEventDispatcher: unregistering <*>
DEBUG org.apache.flink.runtime.io.network.TaskEventDispatcher: unregistering <*>
DEBUG org.apache.flink.runtime.io.network.TaskEventDispatcher: unregistering <*>
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException.
DEBUG org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> due to CancelTaskException: <*>
WARN org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*> with failure cause: <*>
INFO org.apache.flink.runtime.taskmanager.Task: Freeing task resources for <*> (<*>).
DEBUG org.apache.flink.runtime.taskmanager.Task: Release task <*> network resources (state: <*>).
INFO org.apache.flink.runtime.taskmanager.Task: Freeing task resources for <*> (<*>).
DEBUG org.apache.flink.runtime.taskmanager.Task: Ensuring all FileSystem streams are closed for task <*>
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Freeing slot <*>.
DEBUG org.apache.flink.runtime.execution.librarycache.BlobLibraryCacheManager$ResolvedClassLoader: Running class loader shutdown hook: <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Unregistering task executor <*> from the slot manager.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: There is no task executor registered with instance ID <*>. Ignoring this message.
INFO org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Trying to recover job with job id <*>.
INFO org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess: Skipping recovery of job with job id <*>, because it already finished in a previous execution
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate: <*>: Retriggering partition request <*>:<*>.
DEBUG org.apache.flink.runtime.blob.BlobClient: GET BLOB <*>/<*> from <*>.
DEBUG org.apache.flink.runtime.scheduler.SchedulerBase: Archive global failure.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Request <*> file upload from TaskExecutor <*>.
DEBUG org.apache.flink.runtime.resourcemanager.ResourceManager: Request upload of file <*> from unregistered TaskExecutor <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Starting allocation of slot <*> for job <*> with resource profile <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Could not allocate <*> more slots. The number of registered and pending slots is <*>, while the maximum is <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager: Could not allocate <*> more slots. The number of registered and pending slots is <*>, while the maximum is <*>.
WARN org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Could not fulfill resource requirements of job <*>. Free slots: <*>
WARN org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeSlotManager: Could not fulfill resource requirements of job <*>. Free slots: <*>
DEBUG org.apache.flink.runtime.operators.resettable.AbstractBlockResettableIterator: Block Resettable Iterator closed.
DEBUG org.apache.flink.runtime.resourcemanager.DefaultJobLeaderIdService$JobLeaderIdListener: An error occurred in the <*> after the listener has been stopped.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker: A slot was added with an already tracked slot ID <*>. Removing previous entry.
DEBUG org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker: There was no slot registered with slot id <*>.
ERROR org.apache.flink.runtime.io.network.api.writer.RecordWriter: An exception happened while flushing the outputs
DEBUG org.apache.flink.runtime.io.network.partition.consumer.LocalInputChannel: <*>: Requesting LOCAL subpartition <*> of partition <*>. <*>
DEBUG org.apache.flink.runtime.io.network.partition.ResultPartitionManager: Requesting subpartition <*> of <*>.
DEBUG org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate: <*>: Retriggering partition request <*>:<*>.
INFO org.apache.flink.runtime.executiongraph.DefaultExecutionGraph: Job <*> (<*>) switched from state <*> to <*>.
DEBUG org.apache.flink.runtime.operators.GroupReduceCombineDriver: GroupReduceCombineDriver object reuse: <*>.
WARN org.apache.flink.runtime.blob.BlobWriter: Failed to offload value for job <*> to BLOB store.
DEBUG org.apache.flink.runtime.io.network.partition.ResourceManagerPartitionTrackerImpl: Attempted released of unknown data set <*>.
WARN org.apache.flink.runtime.checkpoint.CheckpointStatsCounts: Incremented the completed number of checkpoints without incrementing the in progress checkpoints before.
WARN org.apache.flink.runtime.checkpoint.CheckpointFailureManager: Failed to trigger or complete checkpoint <*> for job <*>. (<*> consecutive failed attempts so far)
WARN org.apache.flink.runtime.checkpoint.CompletedCheckpointStore: Get the latest completed checkpoints failed
DEBUG org.apache.flink.runtime.checkpoint.CheckpointCoordinator: Skip scheduling trigger request because the CheckpointCoordinator is shut down
ERROR org.apache.flink.runtime.entrypoint.ClusterEntrypoint: Reactive mode is configured for an unsupported cluster type. At the moment, reactive mode is only supported by standalone application clusters (bin/standalone-job.sh).
INFO org.apache.flink.runtime.taskmanager.Task: Attempting to cancel task <*> (<*>).
ERROR org.apache.flink.runtime.taskmanager.Task: Encountered fatal error <*> - terminating the JVM
INFO org.apache.flink.runtime.taskmanager.Task: <*> (<*>) switched from <*> to <*>.
INFO org.apache.flink.runtime.taskmanager.Task: Triggering cancellation of task code <*> (<*>).
DEBUG org.apache.flink.runtime.metrics.util.MetricUtils: More than one memory pool named \'Metaspace\' is present. Only the first pool was used for instantiating the \'<*>\' metrics.
DEBUG org.apache.flink.runtime.heartbeat.HeartbeatManagerImpl: Received heartbeat request from <*>.
INFO org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils: The derived from fraction <*> (<*>) is less than its min value <*>, min value will be used instead
WARN org.apache.flink.runtime.externalresource.ExternalResourceUtils: The amount of the <*> should be positive while finding <*>. Will ignore that resource.